{"ast":null,"code":"import _objectSpread from\"/Users/mucenid/questionnaire_poc/frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState,useCallback}from'react';import{useParams,useNavigate}from'react-router-dom';import ProgressBar from'./ProgressBar';import PageView from'./PageView';import{fetchPages,fetchPageAnswers,savePageAnswers,calculatePageProgress,cleanupUnreachablePages,resetAllForCluster,computeReachablePageIndices}from'../api';// Flusso a pagine data-driven (analogo a QuestionnairePageFlowViewModel Swift)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function QuestionnairePageFlow(){const{cluster}=useParams();const navigate=useNavigate();const[pages,setPages]=useState([]);const[pageAnswers,setPageAnswers]=useState({});// { pageId: { qid: value } }\nconst[currentIndex,setCurrentIndex]=useState(0);const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(false);const[error,setError]=useState(null);const[completed,setCompleted]=useState(false);const[progress,setProgress]=useState(0);const[resetting,setResetting]=useState(false);const[visitedStack,setVisitedStack]=useState([]);// array di indici pagina in ordine di visita\n// Carica pagine + risposte\nuseEffect(()=>{if(!cluster)return;let active=true;(async()=>{setLoading(true);setError(null);try{const[pagesResp,answersResp]=await Promise.all([fetchPages(cluster),fetchPageAnswers(cluster)]);if(!active)return;setPages(pagesResp.pages||[]);setPageAnswers(answersResp.pageAnswers||{});}catch(e){setError(e.message||'Errore caricamento');}finally{if(active)setLoading(false);}})();return()=>{active=false;};},[cluster]);// Calcola indice della prima pagina incompleta\nconst recomputeCurrentIndex=useCallback(()=>{if(!pages.length)return 0;const flat=Object.values(pageAnswers||{}).reduce((acc,pa)=>{Object.entries(pa||{}).forEach(_ref=>{let[k,v]=_ref;return acc[k]=v;});return acc;},{});const reachable=computeReachablePageIndices(pages,flat);// Scorri solo le pagine raggiungibili in ordine di definizione\nfor(let i=0;i<pages.length;i++){if(!reachable.has(i))continue;// ignora non raggiungibili\nconst page=pages[i];const req=(page.questions||[]).filter(q=>q.required);const saved=pageAnswers[page.id]||{};const done=req.every(q=>saved[q.id]!==undefined&&saved[q.id]!==null&&saved[q.id]!=='');if(!done)return i;}// Se tutte le raggiungibili sono complete, tieni indice sull'ultima raggiungibile\nlet lastReachable=0;reachable.forEach(idx=>{if(idx>lastReachable)lastReachable=idx;});return lastReachable;},[pages,pageAnswers]);// Recalcola progresso\nuseEffect(()=>{const pct=calculatePageProgress(pages,pageAnswers);setProgress(pct);// Completamento solo sulle pagine raggiungibili\nconst flat=Object.values(pageAnswers||{}).reduce((acc,pa)=>{Object.entries(pa||{}).forEach(_ref2=>{let[k,v]=_ref2;return acc[k]=v;});return acc;},{});const reachable=computeReachablePageIndices(pages,flat);let allReachableComplete=true;reachable.forEach(idx=>{const page=pages[idx];const req=(page.questions||[]).filter(q=>q.required);const saved=pageAnswers[page.id]||{};const done=req.every(q=>saved[q.id]!==undefined&&saved[q.id]!==null&&saved[q.id]!=='');if(!done)allReachableComplete=false;});setCompleted(allReachableComplete&&pct===100);},[pages,pageAnswers]);// Aggiorna indice pagina attuale quando cambiano dati\nuseEffect(()=>{setCurrentIndex(recomputeCurrentIndex());},[recomputeCurrentIndex]);// Mantieni lo stack coerente quando cambia currentIndex (push se nuovo)\nuseEffect(()=>{setVisitedStack(prev=>{if(!pages.length)return[];if(currentIndex<0||currentIndex>=pages.length)return prev;if(prev.length===0)return[currentIndex];const last=prev[prev.length-1];if(last===currentIndex)return prev;// niente duplicati consecutivi\n// Se l'indice è già nello stack ma non è l'ultimo, lo tagliamo fino a quell'indice\nconst existingPos=prev.indexOf(currentIndex);if(existingPos>=0)return prev.slice(0,existingPos+1);return[...prev,currentIndex];});},[currentIndex,pages]);// Scroll & focus top quando cambia pagina corrente\nuseEffect(()=>{// Evita durante caricamenti iniziali\nif(loading)return;// Smooth scroll top\nwindow.scrollTo({top:0,behavior:'smooth'});// Focus sul titolo se presente\nsetTimeout(()=>{const heading=document.querySelector('.page-view h2');if(heading){heading.setAttribute('tabindex','-1');heading.focus({preventScroll:true});}},50);},[currentIndex,loading]);const handleSubmitPage=async answers=>{const page=pages[currentIndex];if(!page)return;setSaving(true);try{// Salva localmente\nsetPageAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[page.id]:answers}));await savePageAnswers(cluster,page.id,answers);window.dispatchEvent(new CustomEvent('progressChanged'));// Cleanup pagine non più raggiungibili dopo questo salvataggio\ntry{const{updated,cleared}=await cleanupUnreachablePages(cluster,pages,_objectSpread(_objectSpread({},pageAnswers),{},{[page.id]:answers}));if(cleared.length){setPageAnswers(updated);// Aggiorna progress immediatamente se necessario\n}}catch(e){// non bloccare il flusso se cleanup fallisce\n// console.warn('Cleanup pagine non raggiungibili fallito', e);\n}// Nuova logica: dopo il salvataggio, determina l'indice della prossima pagina incompleta tra quelle raggiungibili.\nconst flatAfter=Object.values(_objectSpread(_objectSpread({},pageAnswers),{},{[page.id]:answers})).reduce((acc,pa)=>{Object.entries(pa||{}).forEach(_ref3=>{let[k,v]=_ref3;return acc[k]=v;});return acc;},{});const reachable=computeReachablePageIndices(pages,flatAfter);// Trova prima raggiungibile non completa\nlet nextIdx=null;pages.forEach((p,idx)=>{if(nextIdx!==null)return;if(!reachable.has(idx))return;const req=(p.questions||[]).filter(q=>q.required);const saved=idx===currentIndex?answers:pageAnswers[p.id]||{};const done=req.every(q=>saved[q.id]!==undefined&&saved[q.id]!==null&&saved[q.id]!=='');if(!done)nextIdx=idx;});if(nextIdx===null){setCompleted(true);}else{setCurrentIndex(nextIdx);}}catch(e){console.error('Errore salvataggio pagina',e);setError(e.message||'Errore salvataggio');}finally{setSaving(false);}};const handleBack=()=>{if(visitedStack.length<=1){navigate('/');return;}// Ritorna alla pagina precedente nello stack\nconst newStack=visitedStack.slice(0,-1);const targetIndex=newStack[newStack.length-1];const targetPage=pages[targetIndex];setVisitedStack(newStack);if(!targetPage){setCurrentIndex(targetIndex);return;}// Cancella risposte della pagina di destinazione prima di atterrare\nsetPageAnswers(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[targetPage.id]:{}});(async()=>{try{await savePageAnswers(cluster,targetPage.id,{});try{const{updated:cleaned}=await cleanupUnreachablePages(cluster,pages,updated);if(cleaned)setPageAnswers(cleaned);}catch(_unused){}window.dispatchEvent(new CustomEvent('progressChanged'));}catch(e){console.error('Errore reset pagina on back',e);}})();return updated;});setCurrentIndex(targetIndex);};const handleRestart=async()=>{if(!cluster)return;setResetting(true);try{await resetAllForCluster(cluster);setPageAnswers({});setCompleted(false);setCurrentIndex(0);window.dispatchEvent(new CustomEvent('progressChanged'));}finally{setResetting(false);}};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Caricamento...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Errore: \",error,\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),children:\"Indietro\"})]});if(!pages.length)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Nessuna pagina disponibile \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),children:\"Indietro\"})]});if(completed){return/*#__PURE__*/_jsxs(\"div\",{className:\"completed-wrap\",children:[/*#__PURE__*/_jsx(ProgressBar,{value:100}),/*#__PURE__*/_jsx(\"h2\",{children:\"Questionario completato\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-row\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:()=>navigate('/'),children:\"Torna all'elenco\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",disabled:resetting,onClick:handleRestart,children:resetting?'Reset...':'Ricomincia'})]})]});}const page=pages[currentIndex];const initialAnswers=pageAnswers[page.id]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"page-flow\",children:[/*#__PURE__*/_jsx(ProgressBar,{value:progress}),/*#__PURE__*/_jsx(PageView,{page:page,initialAnswers:initialAnswers,onSubmit:handleSubmitPage,loadingNext:saving}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-row\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:handleBack,children:\"\\u2190 Indietro\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",disabled:resetting,onClick:handleRestart,children:resetting?'Reset...':'Ricomincia'})]})]});}","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","useNavigate","ProgressBar","PageView","fetchPages","fetchPageAnswers","savePageAnswers","calculatePageProgress","cleanupUnreachablePages","resetAllForCluster","computeReachablePageIndices","jsx","_jsx","jsxs","_jsxs","QuestionnairePageFlow","cluster","navigate","pages","setPages","pageAnswers","setPageAnswers","currentIndex","setCurrentIndex","loading","setLoading","saving","setSaving","error","setError","completed","setCompleted","progress","setProgress","resetting","setResetting","visitedStack","setVisitedStack","active","pagesResp","answersResp","Promise","all","e","message","recomputeCurrentIndex","length","flat","Object","values","reduce","acc","pa","entries","forEach","_ref","k","v","reachable","i","has","page","req","questions","filter","q","required","saved","id","done","every","undefined","lastReachable","idx","pct","_ref2","allReachableComplete","prev","last","existingPos","indexOf","slice","window","scrollTo","top","behavior","setTimeout","heading","document","querySelector","setAttribute","focus","preventScroll","handleSubmitPage","answers","_objectSpread","dispatchEvent","CustomEvent","updated","cleared","flatAfter","_ref3","nextIdx","p","console","handleBack","newStack","targetIndex","targetPage","cleaned","_unused","handleRestart","children","onClick","className","value","disabled","initialAnswers","onSubmit","loadingNext"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/QuestionnairePageFlow.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ProgressBar from './ProgressBar';\nimport PageView from './PageView';\nimport {\n  fetchPages,\n  fetchPageAnswers,\n  savePageAnswers,\n  calculatePageProgress,\n  cleanupUnreachablePages,\n  resetAllForCluster,\n  computeReachablePageIndices,\n} from '../api';\n\n// Flusso a pagine data-driven (analogo a QuestionnairePageFlowViewModel Swift)\n\nexport default function QuestionnairePageFlow() {\n  const { cluster } = useParams();\n  const navigate = useNavigate();\n  const [pages, setPages] = useState([]);\n  const [pageAnswers, setPageAnswers] = useState({}); // { pageId: { qid: value } }\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [resetting, setResetting] = useState(false);\n  const [visitedStack, setVisitedStack] = useState([]); // array di indici pagina in ordine di visita\n\n  // Carica pagine + risposte\n  useEffect(() => {\n    if (!cluster) return;\n    let active = true;\n    (async () => {\n      setLoading(true); setError(null);\n      try {\n        const [pagesResp, answersResp] = await Promise.all([\n          fetchPages(cluster),\n          fetchPageAnswers(cluster)\n        ]);\n        if (!active) return;\n        setPages(pagesResp.pages || []);\n        setPageAnswers(answersResp.pageAnswers || {});\n      } catch (e) {\n        setError(e.message || 'Errore caricamento');\n      } finally {\n        if (active) setLoading(false);\n      }\n    })();\n    return () => { active = false; };\n  }, [cluster]);\n\n  // Calcola indice della prima pagina incompleta\n  const recomputeCurrentIndex = useCallback(() => {\n    if (!pages.length) return 0;\n    const flat = Object.values(pageAnswers || {}).reduce((acc, pa) => { Object.entries(pa || {}).forEach(([k,v]) => acc[k]=v); return acc; }, {});\n    const reachable = computeReachablePageIndices(pages, flat);\n    // Scorri solo le pagine raggiungibili in ordine di definizione\n    for (let i = 0; i < pages.length; i++) {\n      if (!reachable.has(i)) continue; // ignora non raggiungibili\n      const page = pages[i];\n      const req = (page.questions || []).filter(q => q.required);\n      const saved = pageAnswers[page.id] || {};\n      const done = req.every(q => saved[q.id] !== undefined && saved[q.id] !== null && saved[q.id] !== '');\n      if (!done) return i;\n    }\n    // Se tutte le raggiungibili sono complete, tieni indice sull'ultima raggiungibile\n    let lastReachable = 0;\n    reachable.forEach(idx => { if (idx > lastReachable) lastReachable = idx; });\n    return lastReachable;\n  }, [pages, pageAnswers]);\n\n  // Recalcola progresso\n  useEffect(() => {\n    const pct = calculatePageProgress(pages, pageAnswers);\n    setProgress(pct);\n    // Completamento solo sulle pagine raggiungibili\n    const flat = Object.values(pageAnswers || {}).reduce((acc, pa) => { Object.entries(pa || {}).forEach(([k,v]) => acc[k]=v); return acc; }, {});\n    const reachable = computeReachablePageIndices(pages, flat);\n    let allReachableComplete = true;\n    reachable.forEach(idx => {\n      const page = pages[idx];\n      const req = (page.questions || []).filter(q => q.required);\n      const saved = pageAnswers[page.id] || {};\n      const done = req.every(q => saved[q.id] !== undefined && saved[q.id] !== null && saved[q.id] !== '');\n      if (!done) allReachableComplete = false;\n    });\n    setCompleted(allReachableComplete && pct === 100);\n  }, [pages, pageAnswers]);\n\n  // Aggiorna indice pagina attuale quando cambiano dati\n  useEffect(() => {\n    setCurrentIndex(recomputeCurrentIndex());\n  }, [recomputeCurrentIndex]);\n\n  // Mantieni lo stack coerente quando cambia currentIndex (push se nuovo)\n  useEffect(() => {\n    setVisitedStack(prev => {\n      if (!pages.length) return [];\n      if (currentIndex < 0 || currentIndex >= pages.length) return prev;\n      if (prev.length === 0) return [currentIndex];\n      const last = prev[prev.length - 1];\n      if (last === currentIndex) return prev; // niente duplicati consecutivi\n      // Se l'indice è già nello stack ma non è l'ultimo, lo tagliamo fino a quell'indice\n      const existingPos = prev.indexOf(currentIndex);\n      if (existingPos >= 0) return prev.slice(0, existingPos + 1);\n      return [...prev, currentIndex];\n    });\n  }, [currentIndex, pages]);\n\n  // Scroll & focus top quando cambia pagina corrente\n  useEffect(() => {\n    // Evita durante caricamenti iniziali\n    if (loading) return;\n    // Smooth scroll top\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    // Focus sul titolo se presente\n    setTimeout(() => {\n      const heading = document.querySelector('.page-view h2');\n      if (heading) {\n        heading.setAttribute('tabindex', '-1');\n        heading.focus({ preventScroll: true });\n      }\n    }, 50);\n  }, [currentIndex, loading]);\n\n  const handleSubmitPage = async (answers) => {\n    const page = pages[currentIndex];\n    if (!page) return;\n    setSaving(true);\n    try {\n      // Salva localmente\n      setPageAnswers(prev => ({ ...prev, [page.id]: answers }));\n      await savePageAnswers(cluster, page.id, answers);\n      window.dispatchEvent(new CustomEvent('progressChanged'));\n      // Cleanup pagine non più raggiungibili dopo questo salvataggio\n      try {\n        const { updated, cleared } = await cleanupUnreachablePages(cluster, pages, { ...pageAnswers, [page.id]: answers });\n        if (cleared.length) {\n          setPageAnswers(updated);\n          // Aggiorna progress immediatamente se necessario\n        }\n      } catch (e) {\n        // non bloccare il flusso se cleanup fallisce\n        // console.warn('Cleanup pagine non raggiungibili fallito', e);\n      }\n\n      // Nuova logica: dopo il salvataggio, determina l'indice della prossima pagina incompleta tra quelle raggiungibili.\n      const flatAfter = Object.values({ ...pageAnswers, [page.id]: answers }).reduce((acc, pa) => { Object.entries(pa || {}).forEach(([k,v]) => acc[k]=v); return acc; }, {});\n      const reachable = computeReachablePageIndices(pages, flatAfter);\n      // Trova prima raggiungibile non completa\n      let nextIdx = null;\n      pages.forEach((p, idx) => {\n        if (nextIdx !== null) return;\n        if (!reachable.has(idx)) return;\n        const req = (p.questions || []).filter(q => q.required);\n        const saved = (idx === currentIndex) ? answers : (pageAnswers[p.id] || {});\n        const done = req.every(q => saved[q.id] !== undefined && saved[q.id] !== null && saved[q.id] !== '');\n        if (!done) nextIdx = idx;\n      });\n      if (nextIdx === null) {\n        setCompleted(true);\n      } else {\n        setCurrentIndex(nextIdx);\n      }\n    } catch (e) {\n      console.error('Errore salvataggio pagina', e);\n      setError(e.message || 'Errore salvataggio');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleBack = () => {\n    if (visitedStack.length <= 1) {\n      navigate('/');\n      return;\n    }\n    // Ritorna alla pagina precedente nello stack\n    const newStack = visitedStack.slice(0, -1);\n    const targetIndex = newStack[newStack.length - 1];\n    const targetPage = pages[targetIndex];\n    setVisitedStack(newStack);\n    if (!targetPage) {\n      setCurrentIndex(targetIndex);\n      return;\n    }\n    // Cancella risposte della pagina di destinazione prima di atterrare\n    setPageAnswers(prev => {\n      const updated = { ...prev, [targetPage.id]: {} };\n      (async () => {\n        try {\n          await savePageAnswers(cluster, targetPage.id, {});\n          try {\n            const { updated: cleaned } = await cleanupUnreachablePages(cluster, pages, updated);\n            if (cleaned) setPageAnswers(cleaned);\n          } catch {}\n          window.dispatchEvent(new CustomEvent('progressChanged'));\n        } catch (e) {\n          console.error('Errore reset pagina on back', e);\n        }\n      })();\n      return updated;\n    });\n    setCurrentIndex(targetIndex);\n  };\n\n  const handleRestart = async () => {\n    if (!cluster) return;\n    setResetting(true);\n    try {\n      await resetAllForCluster(cluster);\n      setPageAnswers({});\n      setCompleted(false);\n      setCurrentIndex(0);\n      window.dispatchEvent(new CustomEvent('progressChanged'));\n    } finally {\n      setResetting(false);\n    }\n  };\n\n  if (loading) return <div>Caricamento...</div>;\n  if (error) return <div>Errore: {error} <button onClick={() => navigate('/')}>Indietro</button></div>;\n  if (!pages.length) return <div>Nessuna pagina disponibile <button onClick={() => navigate('/')}>Indietro</button></div>;\n\n  if (completed) {\n    return (\n      <div className=\"completed-wrap\">\n        <ProgressBar value={100} />\n        <h2>Questionario completato</h2>\n        <div className=\"nav-row\">\n          <button className=\"btn-back\" onClick={() => navigate('/')}>Torna all'elenco</button>\n          <button className=\"btn-back\" disabled={resetting} onClick={handleRestart}>{resetting ? 'Reset...' : 'Ricomincia'}</button>\n        </div>\n      </div>\n    );\n  }\n\n  const page = pages[currentIndex];\n  const initialAnswers = pageAnswers[page.id] || {};\n\n  return (\n    <div className=\"page-flow\">\n      <ProgressBar value={progress} />\n      <PageView\n        page={page}\n        initialAnswers={initialAnswers}\n        onSubmit={handleSubmitPage}\n        loadingNext={saving}\n      />\n      <div className=\"nav-row\">\n        <button className=\"btn-back\" onClick={handleBack}>← Indietro</button>\n        <button className=\"btn-back\" disabled={resetting} onClick={handleRestart}>{resetting ? 'Reset...' : 'Ricomincia'}</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/Question.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './Question.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onAnswer\n}) => {\n  _s();\n  // Rimuove il focus dal titolo della pagina all'avvio\n  useEffect(() => {\n    const h2 = document.querySelector('h2.question-text');\n    if (h2 && document.activeElement === h2) {\n      h2.blur();\n    }\n  }, [question]);\n  // Forzatura scala 0-5 indipendentemente dai dati forniti\n  const getRatingMinValue = useCallback(() => 0, []);\n  const getRatingMaxValue = useCallback(() => 5, []);\n  const getRatingDefaultValue = useCallback(() => 0, []);\n\n  // Stato locale, non viene resettato a ogni cambio domanda\n  const [selectedValue, setSelectedValue] = useState(() => {\n    if ((question === null || question === void 0 ? void 0 : question.type) === 'rating') return getRatingDefaultValue();\n    if ((question === null || question === void 0 ? void 0 : question.type) === 'multiple_choice' || (question === null || question === void 0 ? void 0 : question.type) === 'multiple_choice_grouped') return [];\n    return null;\n  });\n  // Stato di ricerca per grouped multiple choice (isolato per domanda corrente)\n  const [groupedSearch, setGroupedSearch] = useState('');\n  // Stato tab attiva per grouped multiple choice (pagina calcio etc.)\n  const [activeTab, setActiveTab] = useState(null);\n  const handleAnswer = value => {\n    setSelectedValue(value);\n    onAnswer(value);\n  };\n\n  // Non resetto lo stato locale a ogni cambio domanda\n\n  // Funzioni input text rimosse perchÃ© non necessarie (domanda open salva onChange)\n\n  const renderRatingScale = () => {\n    const minScale = getRatingMinValue();\n    const maxScale = getRatingMaxValue();\n    const scaleValues = Array.from({\n      length: maxScale - minScale + 1\n    }, (_, i) => minScale + i);\n    const currentValue = selectedValue !== null && selectedValue !== void 0 ? selectedValue : minScale;\n    const updateValue = value => {\n      const clamped = Math.min(Math.max(value, minScale), maxScale);\n      handleAnswer(clamped);\n    };\n    const decrement = () => {\n      updateValue(currentValue - 1);\n    };\n    const increment = () => {\n      updateValue(currentValue + 1);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card rating-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), question.subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rating-subtitle\",\n        children: question.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scale-interaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"scale-button\",\n          onClick: decrement,\n          disabled: currentValue <= minScale,\n          \"aria-label\": \"Diminuisci valore\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"scale-button-symbol\",\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scale-slider-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: minScale,\n            max: maxScale,\n            value: currentValue,\n            className: \"scale-slider\",\n            onChange: event => updateValue(Number(event.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scale-ticks\",\n            \"aria-hidden\": \"true\",\n            children: scaleValues.map(value => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `scale-tick ${currentValue === value ? 'active' : ''}`,\n              children: value\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"scale-button\",\n          onClick: increment,\n          disabled: currentValue >= maxScale,\n          \"aria-label\": \"Aumenta valore\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"scale-button-symbol\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCardOptions = () => {\n    var _question$options;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text plain\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-options\",\n        children: (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `card-option ${selectedValue === option.id ? 'selected' : ''}`,\n          onClick: () => handleAnswer(option.id),\n          children: option.label\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  };\n  const renderOpenQuestion = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text plain\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"open-input\",\n          placeholder: \"Scrivi la tua risposta...\",\n          onChange: e => handleAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMultipleChoice = () => {\n    // Raggruppa le opzioni a coppie per riga\n    const optionRows = [];\n    const opts = question.options || [];\n    for (let i = 0; i < opts.length; i += 2) {\n      optionRows.push(opts.slice(i, i + 2));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text plain\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"mc-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: optionRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [row.map(option => {\n              const isSelected = Array.isArray(selectedValue) && selectedValue.includes(option.id);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  verticalAlign: 'top',\n                  width: '50%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `mc-card${isSelected ? ' selected' : ''}`,\n                  style: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: isSelected,\n                    onChange: e => {\n                      const currentSelection = Array.isArray(selectedValue) ? [...selectedValue] : [];\n                      if (e.target.checked) {\n                        if (!currentSelection.includes(option.id)) currentSelection.push(option.id);\n                      } else {\n                        const index = currentSelection.indexOf(option.id);\n                        if (index > -1) currentSelection.splice(index, 1);\n                      }\n                      handleAnswer(currentSelection);\n                    },\n                    className: \"mc-checkbox\",\n                    style: {\n                      position: 'absolute',\n                      top: 12,\n                      right: 12\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mc-checkmark\",\n                    style: {\n                      position: 'absolute',\n                      top: 12,\n                      right: 12\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mc-label\",\n                    children: option.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this);\n            }), row.length < 2 && /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 36\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGroupedMultipleChoice = () => {\n    const groups = question.groups || [];\n    if (activeTab === null && groups.length > 0) {\n      // inizializza tab attiva alla prima solo quando necessario\n      setActiveTab(groups[0].id);\n    }\n    const maxSel = question.maxSelections || Infinity;\n    const currentSelection = Array.isArray(selectedValue) ? selectedValue : [];\n    const toggle = id => {\n      let next = [...currentSelection];\n      const idx = next.indexOf(id);\n      if (idx >= 0) {\n        next.splice(idx, 1);\n      } else if (next.length < maxSel) {\n        next.push(id);\n      }\n      handleAnswer(next);\n    };\n    const filteredGroups = groups.map(g => ({\n      ...g,\n      options: g.options.filter(o => !groupedSearch || o.label.toLowerCase().includes(groupedSearch.toLowerCase()))\n    })).filter(g => g.options.length > 0);\n    const visibleGroup = filteredGroups.find(g => g.id === activeTab) || filteredGroups[0];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-block grouped\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text plain\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-tabs variant-figma\",\n        children: filteredGroups.map(g => {\n          const isActive = g.id === activeTab;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `group-tab ${isActive ? 'active' : ''}`,\n            onClick: () => setActiveTab(g.id),\n            \"aria-pressed\": isActive,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"group-tab-label\",\n              children: g.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, g.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), question.searchEnabled && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Cerca...\",\n        className: \"grouped-search\",\n        value: groupedSearch,\n        onChange: e => setGroupedSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grouped-mc-wrapper single-group\",\n        children: visibleGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-options\",\n            children: visibleGroup.options.map(opt => {\n              const sel = currentSelection.includes(opt.id);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `group-option ${sel ? 'selected' : ''}`,\n                onClick: () => toggle(opt.id),\n                disabled: !sel && currentSelection.length >= maxSel,\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"team-icon\",\n                    \"aria-hidden\": \"true\",\n                    children: opt.label.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"team-name\",\n                    children: opt.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-checkbox\",\n                  \"aria-hidden\": \"true\",\n                  style: {\n                    marginLeft: 'auto',\n                    marginRight: 0\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: sel,\n                    readOnly: true,\n                    style: {\n                      pointerEvents: 'none',\n                      accentColor: '#1976d2',\n                      width: 20,\n                      height: 20\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, opt.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 3\n      }, this), maxSel !== Infinity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-hint\",\n        children: [currentSelection.length, \"/\", maxSel, \" selezionate\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [question.type === 'rating' && renderRatingScale(), question.type === 'card' && renderCardOptions(), question.type === 'open' && renderOpenQuestion(), question.type === 'multiple_choice' && renderMultipleChoice(), question.type === 'multiple_choice_grouped' && renderGroupedMultipleChoice()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"qctXU6kjiMKL5vUNfR2DAO6WMDU=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Question","question","onAnswer","_s","h2","document","querySelector","activeElement","blur","getRatingMinValue","getRatingMaxValue","getRatingDefaultValue","selectedValue","setSelectedValue","type","groupedSearch","setGroupedSearch","activeTab","setActiveTab","handleAnswer","value","renderRatingScale","minScale","maxScale","scaleValues","Array","from","length","_","i","currentValue","updateValue","clamped","Math","min","max","decrement","increment","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","onClick","disabled","onChange","event","Number","target","map","renderCardOptions","_question$options","options","option","id","label","renderOpenQuestion","placeholder","e","renderMultipleChoice","optionRows","opts","push","slice","row","idx","isSelected","isArray","includes","style","verticalAlign","width","position","checked","currentSelection","index","indexOf","splice","top","right","renderGroupedMultipleChoice","groups","maxSel","maxSelections","Infinity","toggle","next","filteredGroups","g","filter","o","toLowerCase","visibleGroup","find","isActive","searchEnabled","opt","sel","display","alignItems","justifyContent","gap","charAt","toUpperCase","marginLeft","marginRight","readOnly","pointerEvents","accentColor","height","_c","$RefreshReg$"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/Question.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport './Question.css';\n\nconst Question = ({ question, onAnswer }) => {\n  // Rimuove il focus dal titolo della pagina all'avvio\n  useEffect(() => {\n    const h2 = document.querySelector('h2.question-text');\n    if (h2 && document.activeElement === h2) {\n      h2.blur();\n    }\n  }, [question]);\n  // Forzatura scala 0-5 indipendentemente dai dati forniti\n  const getRatingMinValue = useCallback(() => 0, []);\n  const getRatingMaxValue = useCallback(() => 5, []);\n  const getRatingDefaultValue = useCallback(() => 0, []);\n\n  // Stato locale, non viene resettato a ogni cambio domanda\n  const [selectedValue, setSelectedValue] = useState(() => {\n    if (question?.type === 'rating') return getRatingDefaultValue();\n    if (question?.type === 'multiple_choice' || question?.type === 'multiple_choice_grouped') return [];\n    return null;\n  });\n  // Stato di ricerca per grouped multiple choice (isolato per domanda corrente)\n  const [groupedSearch, setGroupedSearch] = useState('');\n  // Stato tab attiva per grouped multiple choice (pagina calcio etc.)\n  const [activeTab, setActiveTab] = useState(null);\n\n  const handleAnswer = (value) => {\n    setSelectedValue(value);\n    onAnswer(value);\n  };\n\n  // Non resetto lo stato locale a ogni cambio domanda\n\n  // Funzioni input text rimosse perchÃ© non necessarie (domanda open salva onChange)\n\n  const renderRatingScale = () => {\n    const minScale = getRatingMinValue();\n  const maxScale = getRatingMaxValue();\n    const scaleValues = Array.from(\n      { length: maxScale - minScale + 1 },\n      (_, i) => minScale + i\n    );\n    const currentValue = selectedValue ?? minScale;\n\n    const updateValue = (value) => {\n      const clamped = Math.min(Math.max(value, minScale), maxScale);\n      handleAnswer(clamped);\n    };\n\n    const decrement = () => {\n      updateValue(currentValue - 1);\n    };\n\n    const increment = () => {\n      updateValue(currentValue + 1);\n    };\n\n    return (\n      <div className=\"question-card rating-card\">\n        <h2 className=\"question-text\">{question.text}</h2>\n        {question.subtitle && <p className=\"rating-subtitle\">{question.subtitle}</p>}\n        <div className=\"scale-interaction\">\n          <button\n            type=\"button\"\n            className=\"scale-button\"\n            onClick={decrement}\n            disabled={currentValue <= minScale}\n            aria-label=\"Diminuisci valore\"\n          >\n            <span className=\"scale-button-symbol\">â</span>\n          </button>\n\n          <div className=\"scale-slider-wrapper\">\n            <input\n              type=\"range\"\n              min={minScale}\n              max={maxScale}\n              value={currentValue}\n              className=\"scale-slider\"\n              onChange={(event) => updateValue(Number(event.target.value))}\n            />\n\n            <div className=\"scale-ticks\" aria-hidden=\"true\">\n              {scaleValues.map((value) => (\n                <span\n                  key={value}\n                  className={`scale-tick ${currentValue === value ? 'active' : ''}`}\n                >\n                  {value}\n                </span>\n              ))}\n            </div>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"scale-button\"\n            onClick={increment}\n            disabled={currentValue >= maxScale}\n            aria-label=\"Aumenta valore\"\n          >\n            <span className=\"scale-button-symbol\">+</span>\n          </button>\n        </div>\n\n        {/* Etichette estremi rimosse su richiesta */}\n      </div>\n    );\n  };\n\n  const renderCardOptions = () => {\n    return (\n      <div className=\"question-block\">\n        <h2 className=\"question-text plain\">{question.text}</h2>\n        <div className=\"card-options\">\n          {question.options?.map((option) => (\n            <button\n              key={option.id}\n              className={`card-option ${selectedValue === option.id ? 'selected' : ''}`}\n              onClick={() => handleAnswer(option.id)}\n            >\n              {option.label}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderOpenQuestion = () => {\n    return (\n      <div className=\"question-block\">\n        <h2 className=\"question-text plain\">{question.text}</h2>\n        <div className=\"open-question-container\">\n          <textarea\n            className=\"open-input\"\n            placeholder=\"Scrivi la tua risposta...\"\n            onChange={(e) => handleAnswer(e.target.value)}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderMultipleChoice = () => {\n    // Raggruppa le opzioni a coppie per riga\n    const optionRows = [];\n    const opts = question.options || [];\n    for (let i = 0; i < opts.length; i += 2) {\n      optionRows.push(opts.slice(i, i + 2));\n    }\n    return (\n      <div className=\"question-block\">\n        <h2 className=\"question-text plain\">{question.text}</h2>\n        <table className=\"mc-table\">\n          <tbody>\n            {optionRows.map((row, idx) => (\n              <tr key={idx}>\n                {row.map((option) => {\n                  const isSelected = Array.isArray(selectedValue) && selectedValue.includes(option.id);\n                  return (\n                    <td key={option.id} style={{verticalAlign:'top',width:'50%'}}>\n                      <div className={`mc-card${isSelected ? ' selected' : ''}`} style={{position:'relative'}}>\n                        <input\n                          type=\"checkbox\"\n                          checked={isSelected}\n                          onChange={(e) => {\n                            const currentSelection = Array.isArray(selectedValue) ? [...selectedValue] : [];\n                            if (e.target.checked) {\n                              if (!currentSelection.includes(option.id)) currentSelection.push(option.id);\n                            } else {\n                              const index = currentSelection.indexOf(option.id);\n                              if (index > -1) currentSelection.splice(index, 1);\n                            }\n                            handleAnswer(currentSelection);\n                          }}\n                          className=\"mc-checkbox\"\n                          style={{position: 'absolute', top: 12, right: 12}}\n                        />\n                        <span className=\"mc-checkmark\" style={{position: 'absolute', top: 12, right: 12}}></span>\n                        <div className=\"mc-label\">{option.label}</div>\n                      </div>\n                    </td>\n                  );\n                })}\n                {/* Se la riga ha solo una opzione, aggiungi una cella vuota per mantenere la struttura */}\n                {row.length < 2 && <td style={{width:'50%'}}></td>}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderGroupedMultipleChoice = () => {\n    const groups = question.groups || [];\n    if (activeTab === null && groups.length > 0) {\n      // inizializza tab attiva alla prima solo quando necessario\n      setActiveTab(groups[0].id);\n    }\n    const maxSel = question.maxSelections || Infinity;\n    const currentSelection = Array.isArray(selectedValue) ? selectedValue : [];\n\n    const toggle = (id) => {\n      let next = [...currentSelection];\n      const idx = next.indexOf(id);\n      if (idx >= 0) { next.splice(idx,1); }\n      else if (next.length < maxSel) { next.push(id); }\n      handleAnswer(next);\n    };\n\n    const filteredGroups = groups.map(g => ({\n      ...g,\n      options: g.options.filter(o => !groupedSearch || o.label.toLowerCase().includes(groupedSearch.toLowerCase()))\n    })).filter(g => g.options.length > 0);\n\n  const visibleGroup = filteredGroups.find(g => g.id === activeTab) || filteredGroups[0];\n\n    return (\n      <div className=\"question-block grouped\">\n        <h2 className=\"question-text plain\">{question.text}</h2>\n        <div className=\"grouped-tabs variant-figma\">\n          {filteredGroups.map(g => {\n            const isActive = g.id === activeTab;\n            return (\n              <button\n                key={g.id}\n                type=\"button\"\n                className={`group-tab ${isActive ? 'active' : ''}`}\n                onClick={() => setActiveTab(g.id)}\n                aria-pressed={isActive}\n              >\n                <span className=\"group-tab-label\">{g.label}</span>\n              </button>\n            );\n          })}\n        </div>\n        {question.searchEnabled && (\n          <input\n            type=\"text\"\n            placeholder=\"Cerca...\"\n            className=\"grouped-search\"\n            value={groupedSearch}\n            onChange={e => setGroupedSearch(e.target.value)}\n          />\n        )}\n  <div className=\"grouped-mc-wrapper single-group\">\n          {visibleGroup && (\n            <div className=\"group-block\">\n              <div className=\"group-options\">\n                {visibleGroup.options.map(opt => {\n                  const sel = currentSelection.includes(opt.id);\n                  return (\n                    <button\n                      type=\"button\"\n                      key={opt.id}\n                      className={`group-option ${sel ? 'selected' : ''}`}\n                      onClick={() => toggle(opt.id)}\n                      disabled={!sel && currentSelection.length >= maxSel}\n                      style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}\n                    >\n                      <span style={{display:'flex',alignItems:'center',gap:'10px'}}>\n                        <span className=\"team-icon\" aria-hidden=\"true\">{opt.label.charAt(0).toUpperCase()}</span>\n                        <span className=\"team-name\">{opt.label}</span>\n                      </span>\n                      <span className=\"option-checkbox\" aria-hidden=\"true\" style={{marginLeft:'auto',marginRight:0}}>\n                        <input type=\"checkbox\" checked={sel} readOnly style={{pointerEvents:'none',accentColor:'#1976d2',width:20,height:20}} />\n                      </span>\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n        {maxSel !== Infinity && (\n          <div className=\"selection-hint\">{currentSelection.length}/{maxSel} selezionate</div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"question-container\">\n      {question.type === 'rating' && renderRatingScale()}\n      {question.type === 'card' && renderCardOptions()}\n      {question.type === 'open' && renderOpenQuestion()}\n      {question.type === 'multiple_choice' && renderMultipleChoice()}\n      {question.type === 'multiple_choice_grouped' && renderGroupedMultipleChoice()}\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/QuestionnaireLoader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Question from './Question';\nimport './QuestionnaireLoader.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'user_123';\nfunction getNextId(q, ansVal) {\n  var _ref, _q$next$ansVal;\n  if (!q || !q.next) return null;\n  if (typeof q.next === 'string') return q.next;\n  if (typeof q.next === 'object') return (_ref = (_q$next$ansVal = q.next[ansVal]) !== null && _q$next$ansVal !== void 0 ? _q$next$ansVal : q.next.default) !== null && _ref !== void 0 ? _ref : null;\n  return null;\n}\n\n// QuestionnaireLoader.js - fix completo\nfunction buildPath(questions, answers) {\n  var _questions$;\n  const map = new Map((questions || []).map(q => [q.id, q]));\n  const startId = questions === null || questions === void 0 ? void 0 : (_questions$ = questions[0]) === null || _questions$ === void 0 ? void 0 : _questions$.id;\n  const path = [];\n  let endReached = false;\n  if (!startId) return {\n    path,\n    endReached\n  };\n  const visited = new Set();\n  let id = startId;\n  let safety = 0;\n  while (id && !visited.has(id) && safety++ < 200) {\n    path.push(id);\n    visited.add(id);\n    const q = map.get(id);\n    const ans = answers[id];\n    if (!(q !== null && q !== void 0 && q.next)) {\n      endReached = true;\n      break;\n    }\n\n    // Se non c'Ã¨ risposta, ci fermiamo qui (non assumiamo rami)\n    if (ans === undefined) break;\n    let nextId = null;\n    if (typeof q.next === 'string') {\n      nextId = q.next;\n    } else if (typeof q.next === 'object') {\n      var _ref2, _q$next$ans;\n      nextId = (_ref2 = (_q$next$ans = q.next[ans]) !== null && _q$next$ans !== void 0 ? _q$next$ans : q.next.default) !== null && _ref2 !== void 0 ? _ref2 : null;\n    }\n    if (!nextId || !map.has(nextId)) {\n      endReached = true;\n      break;\n    }\n    id = nextId;\n  }\n  return {\n    path,\n    endReached\n  };\n}\nfunction computeProgress(questions, answers, stack, completed) {\n  if (completed) return 100;\n  if (!Array.isArray(stack) || stack.length === 0) return 0;\n\n  // Conta le risposte nel percorso effettivo (stack)\n  const answeredInStack = stack.filter(id => answers[id] !== undefined).length;\n  return Math.round(answeredInStack / stack.length * 100);\n}\nconst QuestionnaireLoader = () => {\n  _s();\n  const {\n    cluster\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [stack, setStack] = useState([]); // array di id domande visitate in ordine\n  const [currentId, setCurrentId] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (!cluster) {\n      setLoading(false);\n      navigate('/');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    Promise.all([fetch(`/api/questionnaire/${cluster}`), fetch(`/api/userAnswers/${USER_ID}/${cluster}`)]).then(async ([qsRes, ansRes]) => {\n      var _qs$;\n      if (!qsRes.ok) throw new Error('Questionario non disponibile');\n      if (!ansRes.ok) throw new Error('Risposte non disponibili');\n      const qs = await qsRes.json();\n      const userData = await ansRes.json();\n      const a = (userData === null || userData === void 0 ? void 0 : userData.answers) || {};\n      setQuestions(Array.isArray(qs) ? qs : []);\n      setAnswers(a);\n      const {\n        path,\n        endReached\n      } = buildPath(qs || [], a);\n      const pathNonVuoto = path.length > 0 ? path : qs !== null && qs !== void 0 && (_qs$ = qs[0]) !== null && _qs$ !== void 0 && _qs$.id ? [qs[0].id] : [];\n      setStack(pathNonVuoto);\n      setCurrentId(pathNonVuoto[pathNonVuoto.length - 1] || null);\n      const allAnsweredOnPath = path.every(id => a[id] !== undefined);\n      setCompleted(endReached && allAnsweredOnPath);\n      setLoading(false);\n    }).catch(() => {\n      setError('Errore di caricamento');\n      setLoading(false);\n    });\n  }, [cluster, navigate]);\n  const saveAnswers = newAnswers => {\n    fetch(`/api/userAnswers/${USER_ID}/${cluster}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        answers: newAnswers\n      })\n    }).catch(() => {});\n  };\n  const handleAnswer = (questionId, answerValue) => {\n    // se sto rispondendo a una domanda nel mezzo del percorso, tronco stack e risposte a valle\n    const idxInStack = stack.indexOf(questionId);\n    let trimmedAnswers = {\n      ...answers\n    };\n    if (idxInStack !== -1 && idxInStack < stack.length - 1) {\n      const toRemove = stack.slice(idxInStack + 1);\n      toRemove.forEach(id => {\n        delete trimmedAnswers[id];\n      });\n    }\n    trimmedAnswers[questionId] = answerValue;\n    setAnswers(trimmedAnswers);\n    const q = questions.find(qq => qq.id === questionId);\n    const nextId = getNextId(q, answerValue);\n    if (nextId && questions.some(qq => qq.id === nextId)) {\n      const newStack = [...stack.slice(0, idxInStack + 1), nextId];\n      setStack(newStack);\n      setCurrentId(nextId);\n      setCompleted(false);\n    } else {\n      // fine flusso\n      setStack(stack.slice(0, idxInStack + 1));\n      setCompleted(true);\n    }\n    saveAnswers(trimmedAnswers);\n  };\n  const handleBack = () => {\n    if (!stack.length) {\n      navigate('/');\n      return;\n    }\n    if (stack.length === 1) {\n      navigate('/');\n      return;\n    }\n    const newStack = stack.slice(0, -1);\n    setStack(newStack);\n    setCurrentId(newStack[newStack.length - 1] || null);\n    setCompleted(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Caricamento...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-back\",\n      onClick: () => navigate('/'),\n      children: \"Torna all\\u2019elenco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nessuna domanda disponibile.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-back\",\n        onClick: () => navigate('/'),\n        children: \"Torna all\\u2019elenco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n  const progress = computeProgress(questions, answers, stack, completed);\n  if (completed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-outer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-inner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: \"100% completato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Questionario completato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-back\",\n        onClick: () => navigate('/'),\n        children: \"Torna all'elenco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions.find(q => q.id === currentId) || questions[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-inner\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [progress, \"% completato\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: currentQuestion,\n        onAnswer: val => handleAnswer(currentQuestion.id, val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: handleBack,\n          children: \"\\u2190 Indietro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionnaireLoader, \"pcT1gp6/7nQ6jrTmEoGnHCOWm/k=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionnaireLoader;\nexport default QuestionnaireLoader;\nvar _c;\n$RefreshReg$(_c, \"QuestionnaireLoader\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Question","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_ID","getNextId","q","ansVal","_ref","_q$next$ansVal","next","default","buildPath","questions","answers","_questions$","map","Map","id","startId","path","endReached","visited","Set","safety","has","push","add","get","ans","undefined","nextId","_ref2","_q$next$ans","computeProgress","stack","completed","Array","isArray","length","answeredInStack","filter","Math","round","QuestionnaireLoader","_s","cluster","navigate","setQuestions","setAnswers","setStack","currentId","setCurrentId","setCompleted","loading","setLoading","error","setError","Promise","all","fetch","then","qsRes","ansRes","_qs$","ok","Error","qs","json","userData","a","pathNonVuoto","allAnsweredOnPath","every","catch","saveAnswers","newAnswers","method","headers","body","JSON","stringify","handleAnswer","questionId","answerValue","idxInStack","indexOf","trimmedAnswers","toRemove","slice","forEach","find","qq","some","newStack","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","progress","currentQuestion","style","width","question","onAnswer","val","_c","$RefreshReg$"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/QuestionnaireLoader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Question from './Question';\nimport './QuestionnaireLoader.css';\n\nconst USER_ID = 'user_123';\n\nfunction getNextId(q, ansVal) {\n  if (!q || !q.next) return null;\n  if (typeof q.next === 'string') return q.next;\n  if (typeof q.next === 'object') return q.next[ansVal] ?? q.next.default ?? null;\n  return null;\n}\n\n// QuestionnaireLoader.js - fix completo\nfunction buildPath(questions, answers) {\n  const map = new Map((questions || []).map(q => [q.id, q]));\n  const startId = questions?.[0]?.id;\n  const path = [];\n  let endReached = false;\n  \n  if (!startId) return { path, endReached };\n  \n  const visited = new Set();\n  let id = startId;\n  let safety = 0;\n  \n  while (id && !visited.has(id) && safety++ < 200) {\n    path.push(id);\n    visited.add(id);\n    const q = map.get(id);\n    const ans = answers[id];\n    \n    if (!q?.next) { \n      endReached = true; \n      break; \n    }\n    \n    // Se non c'Ã¨ risposta, ci fermiamo qui (non assumiamo rami)\n    if (ans === undefined) break;\n    \n    let nextId = null;\n    if (typeof q.next === 'string') {\n      nextId = q.next;\n    } else if (typeof q.next === 'object') {\n      nextId = q.next[ans] ?? q.next.default ?? null;\n    }\n    \n    if (!nextId || !map.has(nextId)) { \n      endReached = true; \n      break; \n    }\n    id = nextId;\n  }\n  \n  return { path, endReached };\n}\n\nfunction computeProgress(questions, answers, stack, completed) {\n  if (completed) return 100;\n  if (!Array.isArray(stack) || stack.length === 0) return 0;\n  \n  // Conta le risposte nel percorso effettivo (stack)\n  const answeredInStack = stack.filter(id => answers[id] !== undefined).length;\n  \n  return Math.round((answeredInStack / stack.length) * 100);\n}\n\nconst QuestionnaireLoader = () => {\n  const { cluster } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [stack, setStack] = useState([]); // array di id domande visitate in ordine\n  const [currentId, setCurrentId] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!cluster) {\n      setLoading(false);\n      navigate('/');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    Promise.all([\n      fetch(`/api/questionnaire/${cluster}`),\n      fetch(`/api/userAnswers/${USER_ID}/${cluster}`)\n    ])\n      .then(async ([qsRes, ansRes]) => {\n        if (!qsRes.ok) throw new Error('Questionario non disponibile');\n        if (!ansRes.ok) throw new Error('Risposte non disponibili');\n        const qs = await qsRes.json();\n        const userData = await ansRes.json();\n        const a = userData?.answers || {};\n        setQuestions(Array.isArray(qs) ? qs : []);\n        setAnswers(a);\n\n        const { path, endReached } = buildPath(qs || [], a);\n        const pathNonVuoto = path.length > 0 ? path : (qs?.[0]?.id ? [qs[0].id] : []);\n        setStack(pathNonVuoto);\n        setCurrentId(pathNonVuoto[pathNonVuoto.length - 1] || null);\n        const allAnsweredOnPath = path.every(id => a[id] !== undefined);\n        setCompleted(endReached && allAnsweredOnPath);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError('Errore di caricamento');\n        setLoading(false);\n      });\n  }, [cluster, navigate]);\n\n  const saveAnswers = (newAnswers) => {\n    fetch(`/api/userAnswers/${USER_ID}/${cluster}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ answers: newAnswers })\n    }).catch(() => {});\n  };\n\n  const handleAnswer = (questionId, answerValue) => {\n    // se sto rispondendo a una domanda nel mezzo del percorso, tronco stack e risposte a valle\n    const idxInStack = stack.indexOf(questionId);\n    let trimmedAnswers = { ...answers };\n    if (idxInStack !== -1 && idxInStack < stack.length - 1) {\n      const toRemove = stack.slice(idxInStack + 1);\n      toRemove.forEach(id => { delete trimmedAnswers[id]; });\n    }\n    trimmedAnswers[questionId] = answerValue;\n    setAnswers(trimmedAnswers);\n\n    const q = questions.find(qq => qq.id === questionId);\n    const nextId = getNextId(q, answerValue);\n\n    if (nextId && questions.some(qq => qq.id === nextId)) {\n      const newStack = [...stack.slice(0, idxInStack + 1), nextId];\n      setStack(newStack);\n      setCurrentId(nextId);\n      setCompleted(false);\n    } else {\n      // fine flusso\n      setStack(stack.slice(0, idxInStack + 1));\n      setCompleted(true);\n    }\n\n    saveAnswers(trimmedAnswers);\n  };\n\n  const handleBack = () => {\n    if (!stack.length) {\n      navigate('/');\n      return;\n    }\n    if (stack.length === 1) {\n      navigate('/');\n      return;\n    }\n    const newStack = stack.slice(0, -1);\n    setStack(newStack);\n    setCurrentId(newStack[newStack.length - 1] || null);\n    setCompleted(false);\n  };\n\n  if (loading) return <div>Caricamento...</div>;\n  if (error) return (\n    <div>\n      <p>{error}</p>\n      <button className=\"btn-back\" onClick={() => navigate('/')}>Torna allâelenco</button>\n    </div>\n  );\n\n  if (!questions.length) {\n    return (\n      <div>\n        <p>Nessuna domanda disponibile.</p>\n        <button className=\"btn-back\" onClick={() => navigate('/')}>Torna allâelenco</button>\n      </div>\n    );\n  }\n\n  const progress = computeProgress(questions, answers, stack, completed);\n\n  if (completed) {\n    return (\n      <div className=\"completed-wrap\">\n        <div className=\"progress\">\n          <div className=\"progress-bar-outer\">\n            <div className=\"progress-bar-inner\" />\n          </div>\n          <div className=\"progress-text\">100% completato</div>\n        </div>\n        <h2>Questionario completato</h2>\n        <button className=\"btn-back\" onClick={() => navigate('/')}>\n          Torna all'elenco\n        </button>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions.find(q => q.id === currentId) || questions[0];\n\n  return (\n    <div>\n      <div className=\"progress\">\n        <div className=\"progress-bar-outer\">\n          <div className=\"progress-bar-inner\" style={{ width: `${progress}%` }} />\n        </div>\n        <div className=\"progress-text\">{progress}% completato</div>\n      </div>\n\n      {currentQuestion && (\n        <>\n          <Question\n            question={currentQuestion}\n            onAnswer={val => handleAnswer(currentQuestion.id, val)}\n          />\n          <div className=\"nav-row\">\n            <button className=\"btn-back\" onClick={handleBack}>\n              â Indietro\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionnaireLoader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"/Users/mucenid/questionnaire_poc/frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import Question from'./Question';import'./QuestionnaireLoader.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const USER_ID='user_123';function getNextId(q,ansVal){var _ref,_q$next$ansVal;if(!q||!q.next)return null;if(typeof q.next==='string')return q.next;if(typeof q.next==='object')return(_ref=(_q$next$ansVal=q.next[ansVal])!==null&&_q$next$ansVal!==void 0?_q$next$ansVal:q.next.default)!==null&&_ref!==void 0?_ref:null;return null;}function buildFullPath(questions,answers){var _questions$;const map=new Map((questions||[]).map(q=>[q.id,q]));const startId=questions===null||questions===void 0?void 0:(_questions$=questions[0])===null||_questions$===void 0?void 0:_questions$.id;if(!startId)return{path:[],endReached:false};if(Object.keys(answers).length===0)return{path:[startId],endReached:false};const path=[];let currentId=startId;let endReached=false;const visited=new Set();let safety=0;while(currentId&&!visited.has(currentId)&&safety++<200){var _ref2,_q$next$ans;path.push(currentId);visited.add(currentId);const q=map.get(currentId);if(!(q!==null&&q!==void 0&&q.next)){endReached=true;break;}const ans=answers[currentId];if(ans===undefined)break;let nextId=null;if(typeof q.next==='string')nextId=q.next;else if(typeof q.next==='object')nextId=(_ref2=(_q$next$ans=q.next[ans])!==null&&_q$next$ans!==void 0?_q$next$ans:q.next.default)!==null&&_ref2!==void 0?_ref2:null;if(!nextId||!map.has(nextId)){endReached=true;break;}currentId=nextId;}return{path,endReached};}function computeProgress(questions,answers,stack,completed){if(completed)return 100;if(!Array.isArray(questions)||questions.length===0)return 0;const totalQuestions=questions.length;const answeredCount=Object.keys(answers).filter(id=>questions.some(q=>q.id===id)).length;const percentage=Math.round(answeredCount/totalQuestions*100);return completed?100:Math.min(percentage,99);}const QuestionnaireLoader=_ref3=>{let{onProgressChange}=_ref3;const{cluster}=useParams();const navigate=useNavigate();const[questions,setQuestions]=useState([]);const[answers,setAnswers]=useState({});const[stack,setStack]=useState([]);const[currentId,setCurrentId]=useState(null);const[completed,setCompleted]=useState(false);const[loading,setLoading]=useState(true);const[clusterMeta,setClusterMeta]=useState({title:'',questionnaireTitle:'',questionnaireSubtitle:''});const[error,setError]=useState('');useEffect(()=>{if(!cluster){setLoading(false);navigate('/');return;}setLoading(true);setError('');Promise.all([fetch(\"/api/questionnaire/\".concat(cluster)),fetch(\"/api/userAnswers/\".concat(USER_ID,\"/\").concat(cluster)),fetch(\"/api/progress/\".concat(USER_ID))]).then(async _ref4=>{var _qs$;let[qsRes,ansRes,progressRes]=_ref4;if(!qsRes.ok)throw new Error('Questionario non disponibile');if(!ansRes.ok)throw new Error('Risposte non disponibili');if(progressRes.ok){const allProgress=await progressRes.json();const meta=allProgress.find(p=>p.cluster===cluster);if(meta)setClusterMeta({title:meta.title||'',questionnaireTitle:meta.questionnaireTitle||meta.title||'',questionnaireSubtitle:meta.questionnaireSubtitle||''});}const qs=await qsRes.json();// Se il questionario Ã¨ vuoto, potrebbe essere un cluster a Pagine -> redirect\nif(!Array.isArray(qs)||qs.length===0){try{const pagesResp=await fetch(\"/api/pages/\".concat(cluster));if(pagesResp.ok){const pagesData=await pagesResp.json();if(Array.isArray(pagesData.pages)&&pagesData.pages.length>0){navigate(\"/questionario-pagine/\".concat(cluster),{replace:true});return;}}}catch(_){/* ignora e prosegue mostrando messaggio vuoto */}}const userData=await ansRes.json();const a=(userData===null||userData===void 0?void 0:userData.answers)||{};setQuestions(Array.isArray(qs)?qs:[]);setAnswers(a);const{path,endReached}=buildFullPath(qs||[],a);const pathNonVuoto=path.length>0?path:qs!==null&&qs!==void 0&&(_qs$=qs[0])!==null&&_qs$!==void 0&&_qs$.id?[qs[0].id]:[];setStack(pathNonVuoto);setCurrentId(pathNonVuoto[pathNonVuoto.length-1]||null);const allAnsweredOnPath=path.every(id=>a[id]!==undefined);setCompleted(endReached&&allAnsweredOnPath);setLoading(false);}).catch(e=>{setError('Errore di caricamento');setLoading(false);});},[cluster,navigate]);const saveAnswers=newAnswers=>{fetch(\"/api/userAnswers/\".concat(USER_ID,\"/\").concat(cluster),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({answers:newAnswers})}).then(()=>{onProgressChange&&onProgressChange();}).catch(()=>{});};const handleAnswer=(questionId,answerValue)=>{const idxInStack=stack.indexOf(questionId);let trimmedAnswers=_objectSpread({},answers);if(idxInStack!==-1&&idxInStack<stack.length-1){const toRemove=stack.slice(idxInStack+1);toRemove.forEach(id=>{delete trimmedAnswers[id];});}trimmedAnswers[questionId]=answerValue;setAnswers(trimmedAnswers);const q=questions.find(qq=>qq.id===questionId);const nextId=getNextId(q,answerValue);if(nextId&&questions.some(qq=>qq.id===nextId)){const newStack=[...stack.slice(0,idxInStack+1),nextId];setStack(newStack);setCurrentId(nextId);setCompleted(false);}else{setStack(stack.slice(0,idxInStack+1));setCompleted(true);}saveAnswers(trimmedAnswers);};const handleBack=()=>{if(!stack.length||stack.length===1){navigate('/');return;}const newStack=stack.slice(0,-1);const previousQuestionId=newStack[newStack.length-1];const updatedAnswers=_objectSpread({},answers);if(previousQuestionId&&updatedAnswers[previousQuestionId]!==undefined){delete updatedAnswers[previousQuestionId];setAnswers(updatedAnswers);fetch(\"/api/userAnswers/\".concat(USER_ID,\"/\").concat(cluster),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({answers:updatedAnswers})}).then(()=>{window.dispatchEvent(new CustomEvent('progressChanged'));}).catch(()=>{});}setStack(newStack);setCurrentId(previousQuestionId||null);setCompleted(false);};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Caricamento...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:()=>navigate('/'),children:\"Torna all\\u2019elenco\"})]});if(!questions.length)return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Nessuna domanda disponibile per questo cluster. Potrebbe usare il flusso a pagine.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:()=>navigate(\"/questionario-pagine/\".concat(cluster)),children:\"Vai al flusso a pagine\"}),\" \",/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:()=>navigate('/'),children:\"Torna all\\u2019elenco\"})]});const progress=computeProgress(questions,answers,stack,completed);if(completed)return/*#__PURE__*/_jsxs(\"div\",{className:\"completed-wrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-inner\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-text\",children:\"100% completato\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Questionario completato\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:()=>navigate('/'),children:\"Torna all'elenco\"})]});const currentQuestion=questions.find(q=>q.id===currentId)||questions[0];const headerTitle=clusterMeta.questionnaireTitle||clusterMeta.title||'';const headerSubtitle=clusterMeta.questionnaireSubtitle||'';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"q-flow-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"q-flow-header-inner\",children:[headerTitle&&/*#__PURE__*/_jsx(\"h1\",{children:headerTitle}),headerSubtitle&&/*#__PURE__*/_jsx(\"p\",{children:headerSubtitle})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"q-flow-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-inner\",style:{width:\"\".concat(progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[progress,\"% completato\"]})]}),currentQuestion&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Question,{question:currentQuestion,onAnswer:val=>handleAnswer(currentQuestion.id,val)}),/*#__PURE__*/_jsx(\"div\",{className:\"nav-row\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-back\",onClick:handleBack,children:\"\\u2190 Indietro\"})})]})]})]});};export default QuestionnaireLoader;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Question","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","USER_ID","getNextId","q","ansVal","_ref","_q$next$ansVal","next","default","buildFullPath","questions","answers","_questions$","map","Map","id","startId","path","endReached","Object","keys","length","currentId","visited","Set","safety","has","_ref2","_q$next$ans","push","add","get","ans","undefined","nextId","computeProgress","stack","completed","Array","isArray","totalQuestions","answeredCount","filter","some","percentage","Math","round","min","QuestionnaireLoader","_ref3","onProgressChange","cluster","navigate","setQuestions","setAnswers","setStack","setCurrentId","setCompleted","loading","setLoading","clusterMeta","setClusterMeta","title","questionnaireTitle","questionnaireSubtitle","error","setError","Promise","all","fetch","concat","then","_ref4","_qs$","qsRes","ansRes","progressRes","ok","Error","allProgress","json","meta","find","p","qs","pagesResp","pagesData","pages","replace","_","userData","a","pathNonVuoto","allAnsweredOnPath","every","catch","e","saveAnswers","newAnswers","method","headers","body","JSON","stringify","handleAnswer","questionId","answerValue","idxInStack","indexOf","trimmedAnswers","_objectSpread","toRemove","slice","forEach","qq","newStack","handleBack","previousQuestionId","updatedAnswers","window","dispatchEvent","CustomEvent","children","className","onClick","progress","currentQuestion","headerTitle","headerSubtitle","style","width","question","onAnswer","val"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/components/QuestionnaireLoader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Question from './Question';\nimport './QuestionnaireLoader.css';\n\nconst USER_ID = 'user_123';\n\nfunction getNextId(q, ansVal) {\n  if (!q || !q.next) return null;\n  if (typeof q.next === 'string') return q.next;\n  if (typeof q.next === 'object') return q.next[ansVal] ?? q.next.default ?? null;\n  return null;\n}\n\nfunction buildFullPath(questions, answers) {\n  const map = new Map((questions || []).map(q => [q.id, q]));\n  const startId = questions?.[0]?.id;\n  if (!startId) return { path: [], endReached: false };\n  if (Object.keys(answers).length === 0) return { path: [startId], endReached: false };\n  const path = []; let currentId = startId; let endReached = false; const visited = new Set(); let safety = 0;\n  while (currentId && !visited.has(currentId) && safety++ < 200) {\n    path.push(currentId); visited.add(currentId); const q = map.get(currentId);\n    if (!q?.next) { endReached = true; break; }\n    const ans = answers[currentId]; if (ans === undefined) break;\n    let nextId = null;\n    if (typeof q.next === 'string') nextId = q.next; else if (typeof q.next === 'object') nextId = q.next[ans] ?? q.next.default ?? null;\n    if (!nextId || !map.has(nextId)) { endReached = true; break; }\n    currentId = nextId;\n  }\n  return { path, endReached };\n}\n\nfunction computeProgress(questions, answers, stack, completed) {\n  if (completed) return 100;\n  if (!Array.isArray(questions) || questions.length === 0) return 0;\n  const totalQuestions = questions.length;\n  const answeredCount = Object.keys(answers).filter(id => questions.some(q => q.id === id)).length;\n  const percentage = Math.round((answeredCount / totalQuestions) * 100);\n  return completed ? 100 : Math.min(percentage, 99);\n}\n\nconst QuestionnaireLoader = ({ onProgressChange }) => {\n  const { cluster } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [stack, setStack] = useState([]);\n  const [currentId, setCurrentId] = useState(null);\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [clusterMeta, setClusterMeta] = useState({ title: '', questionnaireTitle: '', questionnaireSubtitle: '' });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!cluster) { setLoading(false); navigate('/'); return; }\n    setLoading(true); setError('');\n    Promise.all([\n      fetch(`/api/questionnaire/${cluster}`),\n      fetch(`/api/userAnswers/${USER_ID}/${cluster}`),\n      fetch(`/api/progress/${USER_ID}`)\n    ])\n      .then(async ([qsRes, ansRes, progressRes]) => {\n        if (!qsRes.ok) throw new Error('Questionario non disponibile');\n        if (!ansRes.ok) throw new Error('Risposte non disponibili');\n        if (progressRes.ok) {\n          const allProgress = await progressRes.json();\n          const meta = allProgress.find(p => p.cluster === cluster);\n          if (meta) setClusterMeta({\n            title: meta.title || '',\n            questionnaireTitle: meta.questionnaireTitle || meta.title || '',\n            questionnaireSubtitle: meta.questionnaireSubtitle || ''\n          });\n        }\n        const qs = await qsRes.json();\n        // Se il questionario Ã¨ vuoto, potrebbe essere un cluster a Pagine -> redirect\n        if (!Array.isArray(qs) || qs.length === 0) {\n          try {\n            const pagesResp = await fetch(`/api/pages/${cluster}`);\n            if (pagesResp.ok) {\n              const pagesData = await pagesResp.json();\n              if (Array.isArray(pagesData.pages) && pagesData.pages.length > 0) {\n                navigate(`/questionario-pagine/${cluster}`, { replace: true });\n                return;\n              }\n            }\n          } catch (_) { /* ignora e prosegue mostrando messaggio vuoto */ }\n        }\n\n        const userData = await ansRes.json();\n        const a = userData?.answers || {};\n        setQuestions(Array.isArray(qs) ? qs : []);\n        setAnswers(a);\n        const { path, endReached } = buildFullPath(qs || [], a);\n        const pathNonVuoto = path.length > 0 ? path : (qs?.[0]?.id ? [qs[0].id] : []);\n        setStack(pathNonVuoto);\n        setCurrentId(pathNonVuoto[pathNonVuoto.length - 1] || null);\n        const allAnsweredOnPath = path.every(id => a[id] !== undefined);\n        setCompleted(endReached && allAnsweredOnPath);\n        setLoading(false);\n      })\n      .catch((e) => { setError('Errore di caricamento'); setLoading(false); });\n  }, [cluster, navigate]);\n\n  const saveAnswers = (newAnswers) => {\n    fetch(`/api/userAnswers/${USER_ID}/${cluster}`, {\n      method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ answers: newAnswers })\n    }).then(() => { onProgressChange && onProgressChange(); }).catch(() => {});\n  };\n\n  const handleAnswer = (questionId, answerValue) => {\n    const idxInStack = stack.indexOf(questionId);\n    let trimmedAnswers = { ...answers };\n    if (idxInStack !== -1 && idxInStack < stack.length - 1) {\n      const toRemove = stack.slice(idxInStack + 1); toRemove.forEach(id => { delete trimmedAnswers[id]; });\n    }\n    trimmedAnswers[questionId] = answerValue; setAnswers(trimmedAnswers);\n    const q = questions.find(qq => qq.id === questionId); const nextId = getNextId(q, answerValue);\n    if (nextId && questions.some(qq => qq.id === nextId)) {\n      const newStack = [...stack.slice(0, idxInStack + 1), nextId]; setStack(newStack); setCurrentId(nextId); setCompleted(false);\n    } else { setStack(stack.slice(0, idxInStack + 1)); setCompleted(true); }\n    saveAnswers(trimmedAnswers);\n  };\n\n  const handleBack = () => {\n    if (!stack.length || stack.length === 1) { navigate('/'); return; }\n    const newStack = stack.slice(0, -1); const previousQuestionId = newStack[newStack.length - 1];\n    const updatedAnswers = { ...answers };\n    if (previousQuestionId && updatedAnswers[previousQuestionId] !== undefined) {\n      delete updatedAnswers[previousQuestionId]; setAnswers(updatedAnswers);\n      fetch(`/api/userAnswers/${USER_ID}/${cluster}`, {\n        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ answers: updatedAnswers })\n      }).then(() => { window.dispatchEvent(new CustomEvent('progressChanged')); }).catch(() => {});\n    }\n    setStack(newStack); setCurrentId(previousQuestionId || null); setCompleted(false);\n  };\n\n  if (loading) return <div>Caricamento...</div>;\n  if (error) return <div><p>{error}</p><button className=\"btn-back\" onClick={() => navigate('/')}>Torna allâelenco</button></div>;\n  if (!questions.length) return <div><p>Nessuna domanda disponibile per questo cluster. Potrebbe usare il flusso a pagine.</p><button className=\"btn-back\" onClick={() => navigate(`/questionario-pagine/${cluster}`)}>Vai al flusso a pagine</button> <button className=\"btn-back\" onClick={() => navigate('/')}>Torna allâelenco</button></div>;\n  const progress = computeProgress(questions, answers, stack, completed);\n  if (completed) return <div className=\"completed-wrap\"><div className=\"progress\"><div className=\"progress-bar-outer\"><div className=\"progress-bar-inner\" /></div><div className=\"progress-text\">100% completato</div></div><h2>Questionario completato</h2><button className=\"btn-back\" onClick={() => navigate('/')}>Torna all'elenco</button></div>;\n  const currentQuestion = questions.find(q => q.id === currentId) || questions[0];\n  const headerTitle = clusterMeta.questionnaireTitle || clusterMeta.title || '';\n  const headerSubtitle = clusterMeta.questionnaireSubtitle || '';\n  return (\n    <div>\n      <div className=\"q-flow-header\">\n        <div className=\"q-flow-header-inner\">\n          {headerTitle && <h1>{headerTitle}</h1>}\n          {headerSubtitle && <p>{headerSubtitle}</p>}\n        </div>\n      </div>\n      <div className=\"q-flow-container\">\n        <div className=\"progress\"><div className=\"progress-bar-outer\"><div className=\"progress-bar-inner\" style={{ width: `${progress}%` }} /></div><div className=\"progress-text\">{progress}% completato</div></div>\n        {currentQuestion && (\n          <>\n            <Question question={currentQuestion} onAnswer={val => handleAnswer(currentQuestion.id, val)} />\n            <div className=\"nav-row\"><button className=\"btn-back\" onClick={handleBack}>â Indietro</button></div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionnaireLoader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
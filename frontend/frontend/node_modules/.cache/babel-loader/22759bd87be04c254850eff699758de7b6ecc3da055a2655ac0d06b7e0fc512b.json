{"ast":null,"code":"var _jsxFileName = \"/Users/mucenid/questionnaire_poc/frontend/frontend/src/pages/CmsEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, { MiniMap, Controls, applyNodeChanges, BaseEdge, EdgeLabelRenderer } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport dagre from \"dagre\";\n\n// Edge personalizzato con label\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LabeledEdge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  label\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BaseEdge, {\n      id: id,\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), label && /*#__PURE__*/_jsxDEV(EdgeLabelRenderer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          transform: `translate(-50%, -50%) translate(${(sourceX + targetX) / 2}px, ${(sourceY + targetY) / 2}px)`,\n          background: '#fff',\n          padding: '4px 12px',\n          borderRadius: 6,\n          border: '1px solid #0057B8',\n          color: '#0057B8',\n          fontWeight: 'bold',\n          fontSize: 14,\n          pointerEvents: 'all'\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = LabeledEdge;\nconst edgeTypes = {\n  labeled: LabeledEdge\n};\nconst CMS_PATH = \"/api/cms\";\nconst nodeWidth = 280;\nconst nodeHeight = 80;\nfunction getLayoutedElements(nodes, edges, direction = \"TB\") {\n  const dagreGraph = new dagre.graphlib.Graph();\n  dagreGraph.setDefaultEdgeLabel(() => ({}));\n  dagreGraph.setGraph({\n    rankdir: direction\n  });\n  nodes.forEach(node => {\n    dagreGraph.setNode(node.id, {\n      width: nodeWidth,\n      height: nodeHeight\n    });\n  });\n  edges.forEach(edge => {\n    dagreGraph.setEdge(edge.source, edge.target);\n  });\n  dagre.layout(dagreGraph);\n  return nodes.map(node => {\n    const nodeWithPosition = dagreGraph.node(node.id);\n    node.position = {\n      x: nodeWithPosition.x - nodeWidth / 2,\n      y: nodeWithPosition.y - nodeHeight / 2\n    };\n    return node;\n  });\n}\nconst CmsEditor = () => {\n  _s();\n  const [cms, setCms] = useState(null);\n  const [jsonText, setJsonText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  useEffect(() => {\n    fetch(CMS_PATH).then(res => res.json()).then(data => {\n      setCms(data);\n      setJsonText(JSON.stringify(data, null, 2));\n      buildGraph(data);\n    });\n  }, []);\n  const buildGraph = cmsData => {\n    if (!(cmsData !== null && cmsData !== void 0 && cmsData.clusters)) return;\n    const cluster = Object.values(cmsData.clusters)[0];\n    const questions = cluster.questionnaire;\n    // Filtra solo domande con id valido\n    const nodeArr = questions.filter(q => q.id).map((q, idx) => ({\n      id: q.id,\n      data: {\n        label: q.text || q.id\n      },\n      position: {\n        x: 0,\n        y: 0\n      },\n      draggable: true\n    }));\n    let edgeArr = [];\n    questions.forEach(q => {\n      if (q.id && q.next) {\n        if (typeof q.next === \"string\") {\n          // Edge solo se il target esiste\n          if (questions.find(qq => qq.id === q.next)) {\n            edgeArr.push({\n              id: `${q.id}->${q.next}`,\n              source: q.id,\n              target: q.next,\n              type: \"labeled\",\n              label: \"\"\n            });\n          }\n        } else if (typeof q.next === \"object\") {\n          Object.entries(q.next).forEach(([answer, targetId]) => {\n            if (questions.find(qq => qq.id === targetId)) {\n              edgeArr.push({\n                id: `${q.id}->${targetId}-${answer}`,\n                source: q.id,\n                target: targetId,\n                type: \"labeled\",\n                label: answer\n              });\n            }\n          });\n        }\n      }\n    });\n    const layoutedNodes = getLayoutedElements(nodeArr, edgeArr, \"TB\");\n    setNodes(layoutedNodes);\n    setEdges(edgeArr);\n  };\n  const handleJsonChange = e => {\n    setJsonText(e.target.value);\n    setError(\"\");\n    try {\n      const parsed = JSON.parse(e.target.value);\n      setCms(parsed);\n      buildGraph(parsed);\n    } catch (err) {\n      setError(\"JSON non valido\");\n    }\n  };\n  const handleSave = () => {\n    try {\n      const parsed = JSON.parse(jsonText);\n      fetch(CMS_PATH, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(parsed)\n      }).then(() => alert(\"Salvato!\"));\n    } catch {\n      setError(\"JSON non valido\");\n    }\n  };\n  const onNodesChange = changes => {\n    setNodes(nds => applyNodeChanges(changes, nds));\n  };\n\n  // Funzione per aggiornare una domanda\n  const updateQuestion = (idx, field, value) => {\n    const newCms = {\n      ...cms\n    };\n    newCms.clusters = {\n      ...newCms.clusters\n    };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    questions[idx] = {\n      ...questions[idx],\n      [field]: value\n    };\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiornare le opzioni di una domanda\n  const updateOption = (qIdx, optIdx, field, value) => {\n    const newCms = {\n      ...cms\n    };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    const options = [...(questions[qIdx].options || [])];\n    options[optIdx] = {\n      ...options[optIdx],\n      [field]: value\n    };\n    questions[qIdx].options = options;\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiungere una nuova domanda\n  const addQuestion = () => {\n    const newCms = {\n      ...cms\n    };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    questions.push({\n      id: `q${questions.length + 1}`,\n      text: \"\",\n      type: \"card\",\n      options: []\n    });\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiungere una nuova opzione\n  const addOption = qIdx => {\n    const newCms = {\n      ...cms\n    };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    const options = [...(questions[qIdx].options || [])];\n    options.push({\n      id: `opt${options.length + 1}`,\n      label: \"\"\n    });\n    questions[qIdx].options = options;\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1600,\n      margin: \"0 auto\",\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editor CMS & Grafo Questionario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 32,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 320\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Domande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), cms && cms.clusters && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [Object.values(cms.clusters)[0].questionnaire.map((q, qIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid #ccc\",\n              borderRadius: 8,\n              marginBottom: 16,\n              padding: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"ID: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: q.id,\n                onChange: e => updateQuestion(qIdx, \"id\", e.target.value),\n                style: {\n                  width: 120\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Testo: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: q.text,\n                onChange: e => updateQuestion(qIdx, \"text\", e.target.value),\n                style: {\n                  width: \"90%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Tipo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: q.type,\n                onChange: e => updateQuestion(qIdx, \"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"card\",\n                  children: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rating\",\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"open\",\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), q.options && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Opzioni:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), q.options.map((opt, optIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 16\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"ID: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: opt.id,\n                    onChange: e => updateOption(qIdx, optIdx, \"id\", e.target.value),\n                    style: {\n                      width: 80\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 38\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\" Label: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: opt.label,\n                    onChange: e => updateOption(qIdx, optIdx, \"label\", e.target.value),\n                    style: {\n                      width: 120\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 42\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 27\n                }, this)]\n              }, opt.id || optIdx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addOption(qIdx),\n                style: {\n                  marginTop: 8\n                },\n                children: \"Aggiungi opzione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Next: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: typeof q.next === \"string\" ? q.next : JSON.stringify(q.next || {}),\n                onChange: e => updateQuestion(qIdx, \"next\", (() => {\n                  try {\n                    return JSON.parse(e.target.value);\n                  } catch {\n                    return e.target.value;\n                  }\n                })()),\n                style: {\n                  width: \"90%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, q.id || qIdx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addQuestion,\n            style: {\n              marginTop: 12\n            },\n            children: \"Aggiungi domanda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            marginTop: 16,\n            padding: \"10px 32px\",\n            borderRadius: 8,\n            background: \"#0057B8\",\n            color: \"#fff\",\n            border: \"none\",\n            fontWeight: \"bold\",\n            fontSize: 16\n          },\n          children: \"Salva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 2,\n          minWidth: 800,\n          height: 1200,\n          background: \"#fafbfc\",\n          borderRadius: 12,\n          border: \"1px solid #eee\",\n          padding: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Grafo delle domande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          fitView: true,\n          edgeTypes: edgeTypes,\n          onNodesChange: onNodesChange,\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(CmsEditor, \"pkdZGKknygIC5szF+k0QD8EIsmc=\");\n_c2 = CmsEditor;\nexport default CmsEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"LabeledEdge\");\n$RefreshReg$(_c2, \"CmsEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","MiniMap","Controls","applyNodeChanges","BaseEdge","EdgeLabelRenderer","dagre","jsxDEV","_jsxDEV","Fragment","_Fragment","LabeledEdge","id","sourceX","sourceY","targetX","targetY","label","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","transform","background","padding","borderRadius","border","color","fontWeight","fontSize","pointerEvents","_c","edgeTypes","labeled","CMS_PATH","nodeWidth","nodeHeight","getLayoutedElements","nodes","edges","direction","dagreGraph","graphlib","Graph","setDefaultEdgeLabel","setGraph","rankdir","forEach","node","setNode","width","height","edge","setEdge","source","target","layout","map","nodeWithPosition","x","y","CmsEditor","_s","cms","setCms","jsonText","setJsonText","error","setError","setNodes","setEdges","fetch","then","res","json","data","JSON","stringify","buildGraph","cmsData","clusters","cluster","Object","values","questions","questionnaire","nodeArr","filter","q","idx","text","draggable","edgeArr","next","find","qq","push","type","entries","answer","targetId","layoutedNodes","handleJsonChange","e","value","parsed","parse","err","handleSave","method","headers","body","alert","onNodesChange","changes","nds","updateQuestion","field","newCms","clusterKey","keys","updateOption","qIdx","optIdx","options","addQuestion","length","addOption","maxWidth","margin","display","gap","flexWrap","flex","minWidth","marginBottom","onChange","opt","marginLeft","onClick","marginTop","fitView","_c2","$RefreshReg$"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/pages/CmsEditor.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, { MiniMap, Controls, applyNodeChanges, BaseEdge, EdgeLabelRenderer } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport dagre from \"dagre\";\n\n// Edge personalizzato con label\nfunction LabeledEdge({ id, sourceX, sourceY, targetX, targetY, label }) {\n  return (\n    <>\n      <BaseEdge id={id} sourceX={sourceX} sourceY={sourceY} targetX={targetX} targetY={targetY} />\n      {label && (\n        <EdgeLabelRenderer>\n          <div style={{\n            position: 'absolute',\n            transform: `translate(-50%, -50%) translate(${(sourceX + targetX) / 2}px, ${(sourceY + targetY) / 2}px)`,\n            background: '#fff',\n            padding: '4px 12px',\n            borderRadius: 6,\n            border: '1px solid #0057B8',\n            color: '#0057B8',\n            fontWeight: 'bold',\n            fontSize: 14,\n            pointerEvents: 'all'\n          }}>\n            {label}\n          </div>\n        </EdgeLabelRenderer>\n      )}\n    </>\n  );\n}\n\nconst edgeTypes = {\n  labeled: LabeledEdge\n};\n\nconst CMS_PATH = \"/api/cms\";\n\nconst nodeWidth = 280;\nconst nodeHeight = 80;\n\nfunction getLayoutedElements(nodes, edges, direction = \"TB\") {\n  const dagreGraph = new dagre.graphlib.Graph();\n  dagreGraph.setDefaultEdgeLabel(() => ({}));\n  dagreGraph.setGraph({ rankdir: direction });\n\n  nodes.forEach((node) => {\n    dagreGraph.setNode(node.id, { width: nodeWidth, height: nodeHeight });\n  });\n\n  edges.forEach((edge) => {\n    dagreGraph.setEdge(edge.source, edge.target);\n  });\n\n  dagre.layout(dagreGraph);\n\n  return nodes.map((node) => {\n    const nodeWithPosition = dagreGraph.node(node.id);\n    node.position = {\n      x: nodeWithPosition.x - nodeWidth / 2,\n      y: nodeWithPosition.y - nodeHeight / 2,\n    };\n    return node;\n  });\n}\n\nconst CmsEditor = () => {\n  const [cms, setCms] = useState(null);\n  const [jsonText, setJsonText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  useEffect(() => {\n    fetch(CMS_PATH)\n      .then(res => res.json())\n      .then(data => {\n        setCms(data);\n        setJsonText(JSON.stringify(data, null, 2));\n        buildGraph(data);\n      });\n  }, []);\n\n  const buildGraph = (cmsData) => {\n    if (!cmsData?.clusters) return;\n    const cluster = Object.values(cmsData.clusters)[0];\n    const questions = cluster.questionnaire;\n    // Filtra solo domande con id valido\n    const nodeArr = questions\n      .filter(q => q.id)\n      .map((q, idx) => ({\n        id: q.id,\n        data: { label: q.text || q.id },\n        position: { x: 0, y: 0 },\n        draggable: true\n      }));\n    let edgeArr = [];\n    questions.forEach(q => {\n      if (q.id && q.next) {\n        if (typeof q.next === \"string\") {\n          // Edge solo se il target esiste\n          if (questions.find(qq => qq.id === q.next)) {\n            edgeArr.push({\n              id: `${q.id}->${q.next}`,\n              source: q.id,\n              target: q.next,\n              type: \"labeled\",\n              label: \"\"\n            });\n          }\n        } else if (typeof q.next === \"object\") {\n          Object.entries(q.next).forEach(([answer, targetId]) => {\n            if (questions.find(qq => qq.id === targetId)) {\n              edgeArr.push({\n                id: `${q.id}->${targetId}-${answer}`,\n                source: q.id,\n                target: targetId,\n                type: \"labeled\",\n                label: answer\n              });\n            }\n          });\n        }\n      }\n    });\n    const layoutedNodes = getLayoutedElements(nodeArr, edgeArr, \"TB\");\n    setNodes(layoutedNodes);\n    setEdges(edgeArr);\n  };\n\n  const handleJsonChange = (e) => {\n    setJsonText(e.target.value);\n    setError(\"\");\n    try {\n      const parsed = JSON.parse(e.target.value);\n      setCms(parsed);\n      buildGraph(parsed);\n    } catch (err) {\n      setError(\"JSON non valido\");\n    }\n  };\n\n  const handleSave = () => {\n    try {\n      const parsed = JSON.parse(jsonText);\n      fetch(CMS_PATH, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(parsed)\n      }).then(() => alert(\"Salvato!\"));\n    } catch {\n      setError(\"JSON non valido\");\n    }\n  };\n\n  const onNodesChange = (changes) => {\n    setNodes(nds => applyNodeChanges(changes, nds));\n  };\n\n  // Funzione per aggiornare una domanda\n  const updateQuestion = (idx, field, value) => {\n    const newCms = { ...cms };\n    newCms.clusters = { ...newCms.clusters };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    questions[idx] = { ...questions[idx], [field]: value };\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiornare le opzioni di una domanda\n  const updateOption = (qIdx, optIdx, field, value) => {\n    const newCms = { ...cms };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    const options = [...(questions[qIdx].options || [])];\n    options[optIdx] = { ...options[optIdx], [field]: value };\n    questions[qIdx].options = options;\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiungere una nuova domanda\n  const addQuestion = () => {\n    const newCms = { ...cms };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    questions.push({\n      id: `q${questions.length + 1}`,\n      text: \"\",\n      type: \"card\",\n      options: []\n    });\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  // Funzione per aggiungere una nuova opzione\n  const addOption = (qIdx) => {\n    const newCms = { ...cms };\n    const clusterKey = Object.keys(newCms.clusters)[0];\n    const questions = [...newCms.clusters[clusterKey].questionnaire];\n    const options = [...(questions[qIdx].options || [])];\n    options.push({ id: `opt${options.length + 1}`, label: \"\" });\n    questions[qIdx].options = options;\n    newCms.clusters[clusterKey].questionnaire = questions;\n    setCms(newCms);\n    setJsonText(JSON.stringify(newCms, null, 2));\n    buildGraph(newCms);\n  };\n\n  return (\n    <div style={{ maxWidth: 1600, margin: \"0 auto\", padding: 24 }}>\n      <h1>Editor CMS & Grafo Questionario</h1>\n      <div style={{ display: \"flex\", gap: 32, flexWrap: \"wrap\" }}>\n        <div style={{ flex: 1, minWidth: 320 }}>\n          <h2>Domande</h2>\n          {cms && cms.clusters && (\n            <>\n              {Object.values(cms.clusters)[0].questionnaire.map((q, qIdx) => (\n                <div key={q.id || qIdx} style={{ border: \"1px solid #ccc\", borderRadius: 8, marginBottom: 16, padding: 12 }}>\n                  <label>ID: <input value={q.id} onChange={e => updateQuestion(qIdx, \"id\", e.target.value)} style={{ width: 120 }} /></label>\n                  <br />\n                  <label>Testo: <input value={q.text} onChange={e => updateQuestion(qIdx, \"text\", e.target.value)} style={{ width: \"90%\" }} /></label>\n                  <br />\n                  <label>Tipo:\n                    <select value={q.type} onChange={e => updateQuestion(qIdx, \"type\", e.target.value)}>\n                      <option value=\"card\">Card</option>\n                      <option value=\"rating\">Rating</option>\n                      <option value=\"open\">Open</option>\n                    </select>\n                  </label>\n                  <br />\n                  {q.options && (\n                    <div>\n                      <b>Opzioni:</b>\n                      {q.options.map((opt, optIdx) => (\n                        <div key={opt.id || optIdx} style={{ marginLeft: 16 }}>\n                          <label>ID: <input value={opt.id} onChange={e => updateOption(qIdx, optIdx, \"id\", e.target.value)} style={{ width: 80 }} /></label>\n                          <label> Label: <input value={opt.label} onChange={e => updateOption(qIdx, optIdx, \"label\", e.target.value)} style={{ width: 120 }} /></label>\n                        </div>\n                      ))}\n                      <button onClick={() => addOption(qIdx)} style={{ marginTop: 8 }}>Aggiungi opzione</button>\n                    </div>\n                  )}\n                  <br />\n                  <label>Next: <input value={typeof q.next === \"string\" ? q.next : JSON.stringify(q.next || {})}\n                    onChange={e => updateQuestion(qIdx, \"next\", (() => {\n                      try {\n                        return JSON.parse(e.target.value);\n                      } catch {\n                        return e.target.value;\n                      }\n                    })())}\n                    style={{ width: \"90%\" }} /></label>\n                </div>\n              ))}\n              <button onClick={addQuestion} style={{ marginTop: 12 }}>Aggiungi domanda</button>\n            </>\n          )}\n          <button\n            onClick={handleSave}\n            style={{ marginTop: 16, padding: \"10px 32px\", borderRadius: 8, background: \"#0057B8\", color: \"#fff\", border: \"none\", fontWeight: \"bold\", fontSize: 16 }}\n          >\n            Salva\n          </button>\n        </div>\n        <div style={{\n          flex: 2,\n          minWidth: 800,\n          height: 1200,\n          background: \"#fafbfc\",\n          borderRadius: 12,\n          border: \"1px solid #eee\",\n          padding: 12\n        }}>\n          <h2>Grafo delle domande</h2>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            fitView\n            edgeTypes={edgeTypes}\n            onNodesChange={onNodesChange}\n          >\n            <MiniMap />\n            <Controls />\n          </ReactFlow>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CmsEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
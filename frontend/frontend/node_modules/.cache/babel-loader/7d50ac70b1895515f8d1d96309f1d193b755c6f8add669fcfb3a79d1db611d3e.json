{"ast":null,"code":"import _objectSpread from\"/Users/mucenid/questionnaire_poc/frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// api.js - layer di servizio per il frontend React\n// Incapsula tutte le chiamate REST al backend\nconst USER_ID='user_123';const base='';// proxy in package.json punta a http://localhost:3001\nasync function jsonFetch(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const resp=await fetch(url,_objectSpread({headers:{'Content-Type':'application/json'}},options));if(!resp.ok){let msg=\"HTTP \".concat(resp.status);try{const j=await resp.json();msg=j.error||msg;}catch(_unused){}throw new Error(msg);}return resp.json();}// Lista progress questionari (clusters)\nexport async function fetchProgress(){return jsonFetch(\"/api/progress/\".concat(USER_ID));}// Domande formato classico\nexport async function fetchQuestionnaire(cluster){return jsonFetch(\"/api/questionnaire/\".concat(cluster));// array\n}// Risposte formato classico\nexport async function fetchAnswers(cluster){return jsonFetch(\"/api/userAnswers/\".concat(USER_ID,\"/\").concat(cluster));}export async function saveAnswers(cluster,answers){return jsonFetch(\"/api/userAnswers/\".concat(USER_ID,\"/\").concat(cluster),{method:'POST',body:JSON.stringify({answers})});}export async function resetAnswers(cluster){return jsonFetch(\"/api/userAnswers/\".concat(USER_ID,\"/reset/\").concat(cluster),{method:'POST'});}// Pagine (nuovo formato)\nexport async function fetchPages(cluster){return jsonFetch(\"/api/pages/\".concat(cluster));// { title, pages: [...] }\n}export async function fetchPageAnswers(cluster){return jsonFetch(\"/api/pageAnswers/\".concat(USER_ID,\"/\").concat(cluster));// { pageAnswers }\n}export async function fetchSinglePage(pageId){return jsonFetch(\"/api/pages/page/\".concat(pageId));}export async function savePageAnswers(cluster,pageId,answers){return jsonFetch(\"/api/pageAnswers/\".concat(USER_ID,\"/\").concat(cluster,\"/\").concat(pageId),{method:'POST',body:JSON.stringify({answers})});}export async function resetPageAnswers(cluster){return jsonFetch(\"/api/pageAnswers/\".concat(USER_ID,\"/\").concat(cluster,\"/reset\"),{method:'POST'});}// Reset totale: svuota anche eventuali questionario classico (difensivo)\nexport async function resetAllForCluster(cluster){try{await resetAnswers(cluster);}catch(_){/* ignore */}try{await resetPageAnswers(cluster);}catch(_){/* ignore */}}// Utility progress locale per questionari classici\nexport function computeQuestionnaireProgress(questions,answers,completed){if(completed)return 100;if(!Array.isArray(questions)||questions.length===0)return 0;const total=questions.length;const answered=Object.keys(answers||{}).filter(id=>questions.some(q=>q.id===id)).length;const pct=Math.round(answered/total*100);return completed?100:Math.min(pct,99);}// Motore path (replica buildFullPath)\nexport function buildFullPath(questions,answers){var _questions$;const map=new Map((questions||[]).map(q=>[q.id,q]));const startId=questions===null||questions===void 0?void 0:(_questions$=questions[0])===null||_questions$===void 0?void 0:_questions$.id;if(!startId)return{path:[],endReached:false};if(!answers||Object.keys(answers).length===0)return{path:[startId],endReached:false};const path=[];let currentId=startId;let endReached=false;const visited=new Set();let safety=0;while(currentId&&!visited.has(currentId)&&safety++<200){var _ref,_q$next$ans;path.push(currentId);visited.add(currentId);const q=map.get(currentId);if(!(q!==null&&q!==void 0&&q.next)){endReached=true;break;}const ans=answers[currentId];if(ans===undefined)break;let nextId=null;if(typeof q.next==='string')nextId=q.next;else if(typeof q.next==='object')nextId=(_ref=(_q$next$ans=q.next[ans])!==null&&_q$next$ans!==void 0?_q$next$ans:q.next.default)!==null&&_ref!==void 0?_ref:null;if(!nextId||!map.has(nextId)){endReached=true;break;}currentId=nextId;}return{path,endReached};}// Motore pagine (semplificato data-driven)\nexport function evaluateCondition(condition,flatAnswers){const userValue=flatAnswers[condition.questionId];if(userValue===undefined)return false;const userStr=String(userValue);const expected=String(condition.value);const op=condition.operatorType||condition.operator;if(op==='=='||op==='!=')return op==='=='?userStr===expected:userStr!==expected;const uNum=Number(userStr);const eNum=Number(expected);if(Number.isNaN(uNum)||Number.isNaN(eNum))return false;switch(op){case'>':return uNum>eNum;case'>=':return uNum>=eNum;case'<':return uNum<eNum;case'<=':return uNum<=eNum;default:return false;}}export function resolveRoutingTargets(routing,pages,flatAnswers){if(!routing)return[];const rules=[...(routing.rules||[])].sort((a,b)=>{var _a$priority,_b$priority;return((_a$priority=a.priority)!==null&&_a$priority!==void 0?_a$priority:0)-((_b$priority=b.priority)!==null&&_b$priority!==void 0?_b$priority:0);});const matchedPages=rules.filter(r=>evaluateCondition(r.condition,flatAnswers)).map(r=>r.nextPage);const targets=new Set();matchedPages.forEach(pid=>targets.add(pid));if(routing.defaultAction&&routing.defaultAction!=='complete')targets.add(routing.defaultAction);return[...targets].map(id=>pages.findIndex(p=>p.id===id)).filter(i=>i>=0);}export function computeReachablePageIndices(pages,flatAnswers){if(!Array.isArray(pages)||pages.length===0)return new Set();const visited=new Set();const queue=[0];while(queue.length){const idx=queue.shift();if(idx<0||idx>=pages.length||visited.has(idx))continue;visited.add(idx);const page=pages[idx];if(page&&page.conditionalRouting){const targets=resolveRoutingTargets(page.conditionalRouting,pages,flatAnswers);targets.forEach(t=>{if(!visited.has(t))queue.push(t);});}else{const next=idx+1;if(next<pages.length)queue.push(next);}}return visited;}export function calculatePageProgress(pages,pageAnswers){if(!Array.isArray(pages)||pages.length===0)return 0;const flatAnswers=Object.values(pageAnswers||{}).reduce((acc,answersObj)=>{Object.entries(answersObj||{}).forEach(_ref2=>{let[qid,v]=_ref2;acc[qid]=v;});return acc;},{});const reachable=computeReachablePageIndices(pages,flatAnswers);if(reachable.size===0)return 0;let totalRequired=0;let answeredRequired=0;for(const idx of reachable){const page=pages[idx];if(!page)continue;const reqQuestions=(page.questions||[]).filter(q=>q.required===true);if(reqQuestions.length===0)continue;totalRequired+=reqQuestions.length;const saved=pageAnswers[page.id]||{};answeredRequired+=reqQuestions.filter(q=>saved[q.id]!==undefined).length;}if(totalRequired===0)return 0;const pct=Math.round(answeredRequired/totalRequired*100);return answeredRequired===totalRequired?100:Math.min(pct,99);}// Pulisce risposte di pagine non piÃ¹ raggiungibili (simile a PageFlowEngine.cleanupUnreachablePages)\nexport async function cleanupUnreachablePages(cluster,pages,pageAnswers){const flatAnswers=Object.values(pageAnswers||{}).reduce((acc,answersObj)=>{Object.entries(answersObj||{}).forEach(_ref3=>{let[qid,v]=_ref3;acc[qid]=v;});return acc;},{});const reachable=computeReachablePageIndices(pages,flatAnswers);const updated=_objectSpread({},pageAnswers);const cleared=[];for(const pageId of Object.keys(pageAnswers||{})){const idx=pages.findIndex(p=>p.id===pageId);if(idx>=0&&!reachable.has(idx)&&Object.keys(updated[pageId]||{}).length>0){updated[pageId]={};cleared.push(pageId);// Persisto svuotamento backend\nawait savePageAnswers(cluster,pageId,{});}}return{updated,cleared};}","map":{"version":3,"names":["USER_ID","base","jsonFetch","url","options","arguments","length","undefined","resp","fetch","_objectSpread","headers","ok","msg","concat","status","j","json","error","_unused","Error","fetchProgress","fetchQuestionnaire","cluster","fetchAnswers","saveAnswers","answers","method","body","JSON","stringify","resetAnswers","fetchPages","fetchPageAnswers","fetchSinglePage","pageId","savePageAnswers","resetPageAnswers","resetAllForCluster","_","computeQuestionnaireProgress","questions","completed","Array","isArray","total","answered","Object","keys","filter","id","some","q","pct","Math","round","min","buildFullPath","_questions$","map","Map","startId","path","endReached","currentId","visited","Set","safety","has","_ref","_q$next$ans","push","add","get","next","ans","nextId","default","evaluateCondition","condition","flatAnswers","userValue","questionId","userStr","String","expected","value","op","operatorType","operator","uNum","Number","eNum","isNaN","resolveRoutingTargets","routing","pages","rules","sort","a","b","_a$priority","_b$priority","priority","matchedPages","r","nextPage","targets","forEach","pid","defaultAction","findIndex","p","i","computeReachablePageIndices","queue","idx","shift","page","conditionalRouting","t","calculatePageProgress","pageAnswers","values","reduce","acc","answersObj","entries","_ref2","qid","v","reachable","size","totalRequired","answeredRequired","reqQuestions","required","saved","cleanupUnreachablePages","_ref3","updated","cleared"],"sources":["/Users/mucenid/questionnaire_poc/frontend/frontend/src/api.js"],"sourcesContent":["// api.js - layer di servizio per il frontend React\n// Incapsula tutte le chiamate REST al backend\n\nconst USER_ID = 'user_123';\nconst base = '';// proxy in package.json punta a http://localhost:3001\n\nasync function jsonFetch(url, options = {}) {\n  const resp = await fetch(url, { headers: { 'Content-Type': 'application/json' }, ...options });\n  if (!resp.ok) {\n    let msg = `HTTP ${resp.status}`;\n    try { const j = await resp.json(); msg = j.error || msg; } catch {}\n    throw new Error(msg);\n  }\n  return resp.json();\n}\n\n// Lista progress questionari (clusters)\nexport async function fetchProgress() {\n  return jsonFetch(`/api/progress/${USER_ID}`);\n}\n\n// Domande formato classico\nexport async function fetchQuestionnaire(cluster) {\n  return jsonFetch(`/api/questionnaire/${cluster}`); // array\n}\n\n// Risposte formato classico\nexport async function fetchAnswers(cluster) {\n  return jsonFetch(`/api/userAnswers/${USER_ID}/${cluster}`);\n}\n\nexport async function saveAnswers(cluster, answers) {\n  return jsonFetch(`/api/userAnswers/${USER_ID}/${cluster}`, {\n    method: 'POST',\n    body: JSON.stringify({ answers })\n  });\n}\n\nexport async function resetAnswers(cluster) {\n  return jsonFetch(`/api/userAnswers/${USER_ID}/reset/${cluster}`, { method: 'POST' });\n}\n\n// Pagine (nuovo formato)\nexport async function fetchPages(cluster) {\n  return jsonFetch(`/api/pages/${cluster}`); // { title, pages: [...] }\n}\n\nexport async function fetchPageAnswers(cluster) {\n  return jsonFetch(`/api/pageAnswers/${USER_ID}/${cluster}`); // { pageAnswers }\n}\n\nexport async function fetchSinglePage(pageId) {\n  return jsonFetch(`/api/pages/page/${pageId}`);\n}\n\nexport async function savePageAnswers(cluster, pageId, answers) {\n  return jsonFetch(`/api/pageAnswers/${USER_ID}/${cluster}/${pageId}`, {\n    method: 'POST',\n    body: JSON.stringify({ answers })\n  });\n}\n\nexport async function resetPageAnswers(cluster) {\n  return jsonFetch(`/api/pageAnswers/${USER_ID}/${cluster}/reset`, { method: 'POST' });\n}\n\n// Reset totale: svuota anche eventuali questionario classico (difensivo)\nexport async function resetAllForCluster(cluster) {\n  try { await resetAnswers(cluster); } catch (_) { /* ignore */ }\n  try { await resetPageAnswers(cluster); } catch (_) { /* ignore */ }\n}\n\n// Utility progress locale per questionari classici\nexport function computeQuestionnaireProgress(questions, answers, completed) {\n  if (completed) return 100;\n  if (!Array.isArray(questions) || questions.length === 0) return 0;\n  const total = questions.length;\n  const answered = Object.keys(answers || {}).filter(id => questions.some(q => q.id === id)).length;\n  const pct = Math.round((answered / total) * 100);\n  return completed ? 100 : Math.min(pct, 99);\n}\n\n// Motore path (replica buildFullPath)\nexport function buildFullPath(questions, answers) {\n  const map = new Map((questions || []).map(q => [q.id, q]));\n  const startId = questions?.[0]?.id;\n  if (!startId) return { path: [], endReached: false };\n  if (!answers || Object.keys(answers).length === 0) return { path: [startId], endReached: false };\n  const path = [];\n  let currentId = startId;\n  let endReached = false;\n  const visited = new Set();\n  let safety = 0;\n  while (currentId && !visited.has(currentId) && safety++ < 200) {\n    path.push(currentId);\n    visited.add(currentId);\n    const q = map.get(currentId);\n    if (!q?.next) { endReached = true; break; }\n    const ans = answers[currentId];\n    if (ans === undefined) break;\n    let nextId = null;\n    if (typeof q.next === 'string') nextId = q.next; else if (typeof q.next === 'object') nextId = q.next[ans] ?? q.next.default ?? null;\n    if (!nextId || !map.has(nextId)) { endReached = true; break; }\n    currentId = nextId;\n  }\n  return { path, endReached };\n}\n\n// Motore pagine (semplificato data-driven)\nexport function evaluateCondition(condition, flatAnswers) {\n  const userValue = flatAnswers[condition.questionId];\n  if (userValue === undefined) return false;\n  const userStr = String(userValue);\n  const expected = String(condition.value);\n  const op = condition.operatorType || condition.operator;\n  if (op === '==' || op === '!=') return op === '==' ? userStr === expected : userStr !== expected;\n  const uNum = Number(userStr); const eNum = Number(expected);\n  if (Number.isNaN(uNum) || Number.isNaN(eNum)) return false;\n  switch (op) { case '>': return uNum > eNum; case '>=': return uNum >= eNum; case '<': return uNum < eNum; case '<=': return uNum <= eNum; default: return false; }\n}\n\nexport function resolveRoutingTargets(routing, pages, flatAnswers) {\n  if (!routing) return [];\n  const rules = [...(routing.rules || [])].sort((a,b) => (a.priority ?? 0) - (b.priority ?? 0));\n  const matchedPages = rules.filter(r => evaluateCondition(r.condition, flatAnswers)).map(r => r.nextPage);\n  const targets = new Set();\n  matchedPages.forEach(pid => targets.add(pid));\n  if (routing.defaultAction && routing.defaultAction !== 'complete') targets.add(routing.defaultAction);\n  return [...targets].map(id => pages.findIndex(p => p.id === id)).filter(i => i >= 0);\n}\n\nexport function computeReachablePageIndices(pages, flatAnswers) {\n  if (!Array.isArray(pages) || pages.length === 0) return new Set();\n  const visited = new Set();\n  const queue = [0];\n  while (queue.length) {\n    const idx = queue.shift();\n    if (idx < 0 || idx >= pages.length || visited.has(idx)) continue;\n    visited.add(idx);\n    const page = pages[idx];\n    if (page && page.conditionalRouting) {\n      const targets = resolveRoutingTargets(page.conditionalRouting, pages, flatAnswers);\n      targets.forEach(t => { if (!visited.has(t)) queue.push(t); });\n    } else {\n      const next = idx + 1; if (next < pages.length) queue.push(next);\n    }\n  }\n  return visited;\n}\n\nexport function calculatePageProgress(pages, pageAnswers) {\n  if (!Array.isArray(pages) || pages.length === 0) return 0;\n  const flatAnswers = Object.values(pageAnswers || {}).reduce((acc, answersObj) => { Object.entries(answersObj || {}).forEach(([qid,v]) => { acc[qid] = v; }); return acc; }, {});\n  const reachable = computeReachablePageIndices(pages, flatAnswers);\n  if (reachable.size === 0) return 0;\n  let totalRequired = 0; let answeredRequired = 0;\n  for (const idx of reachable) {\n    const page = pages[idx]; if (!page) continue;\n    const reqQuestions = (page.questions || []).filter(q => q.required === true);\n    if (reqQuestions.length === 0) continue;\n    totalRequired += reqQuestions.length;\n    const saved = pageAnswers[page.id] || {};\n    answeredRequired += reqQuestions.filter(q => saved[q.id] !== undefined).length;\n  }\n  if (totalRequired === 0) return 0;\n  const pct = Math.round((answeredRequired / totalRequired) * 100);\n  return answeredRequired === totalRequired ? 100 : Math.min(pct, 99);\n}\n\n// Pulisce risposte di pagine non piÃ¹ raggiungibili (simile a PageFlowEngine.cleanupUnreachablePages)\nexport async function cleanupUnreachablePages(cluster, pages, pageAnswers) {\n  const flatAnswers = Object.values(pageAnswers || {}).reduce((acc, answersObj) => { Object.entries(answersObj || {}).forEach(([qid,v]) => { acc[qid] = v; }); return acc; }, {});\n  const reachable = computeReachablePageIndices(pages, flatAnswers);\n  const updated = { ...pageAnswers };\n  const cleared = [];\n  for (const pageId of Object.keys(pageAnswers || {})) {\n    const idx = pages.findIndex(p => p.id === pageId);\n    if (idx >= 0 && !reachable.has(idx) && Object.keys(updated[pageId] || {}).length > 0) {\n      updated[pageId] = {};\n      cleared.push(pageId);\n      // Persisto svuotamento backend\n      await savePageAnswers(cluster, pageId, {});\n    }\n  }\n  return { updated, cleared };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}